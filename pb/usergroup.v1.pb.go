// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.2
// source: pb/usergroup.v1.proto

package pb

import (
	_ "github.com/Ccheers/protoc-gen-go-kratos-http/khttp"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 角色绑定
type RoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群ID
	ClusterId uint32 `protobuf:"varint,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,optional"`
	// Namespace 名称
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,optional"`
	// Role 角色ID
	RoleId uint32 `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,optional"`
}

func (x *RoleBinding) Reset() {
	*x = RoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBinding) ProtoMessage() {}

func (x *RoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBinding.ProtoReflect.Descriptor instead.
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{0}
}

func (x *RoleBinding) GetClusterId() uint32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *RoleBinding) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleBinding) GetRoleId() uint32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type GrantUserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID列表
	UserGroupIds []uint32 `protobuf:"varint,1,rep,packed,name=user_group_ids,json=userGroupIds,proto3" json:"user_group_ids,optional"`
	// roles 列表
	Roles []*RoleBinding `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,optional"`
}

func (x *GrantUserGroupRequest) Reset() {
	*x = GrantUserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantUserGroupRequest) ProtoMessage() {}

func (x *GrantUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantUserGroupRequest.ProtoReflect.Descriptor instead.
func (*GrantUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GrantUserGroupRequest) GetUserGroupIds() []uint32 {
	if x != nil {
		return x.UserGroupIds
	}
	return nil
}

func (x *GrantUserGroupRequest) GetRoles() []*RoleBinding {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GrantUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,optional"`
}

func (x *GrantUserGroupResponse) Reset() {
	*x = GrantUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantUserGroupResponse) ProtoMessage() {}

func (x *GrantUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantUserGroupResponse.ProtoReflect.Descriptor instead.
func (*GrantUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{2}
}

func (x *GrantUserGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 用户组授权列表请求
type ListGrantedUserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关键字
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,optional"`
	// 分页
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,optional"`
	// 每页数量
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,optional"`
	// 是否全部
	ListAll uint32 `protobuf:"varint,4,opt,name=list_all,json=listAll,proto3" json:"list_all,optional"`
}

func (x *ListGrantedUserGroupRequest) Reset() {
	*x = ListGrantedUserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGrantedUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGrantedUserGroupRequest) ProtoMessage() {}

func (x *ListGrantedUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGrantedUserGroupRequest.ProtoReflect.Descriptor instead.
func (*ListGrantedUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{3}
}

func (x *ListGrantedUserGroupRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListGrantedUserGroupRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListGrantedUserGroupRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGrantedUserGroupRequest) GetListAll() uint32 {
	if x != nil {
		return x.ListAll
	}
	return 0
}

// message
type GrantedUserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID
	UserGroupId uint32 `protobuf:"varint,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,optional"`
	// 用户组名称
	UserGroupName string `protobuf:"bytes,2,opt,name=user_group_name,json=userGroupName,proto3" json:"user_group_name,optional"`
	// 授权集群数
	GrantedClusterCount uint32 `protobuf:"varint,3,opt,name=granted_cluster_count,json=grantedClusterCount,proto3" json:"granted_cluster_count,optional"`
	// 授权角色数
	GrantedRoleCount uint32 `protobuf:"varint,4,opt,name=granted_role_count,json=grantedRoleCount,proto3" json:"granted_role_count,optional"`
	// 更新时间
	UpdateTime uint64 `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,optional"`
}

func (x *GrantedUserGroup) Reset() {
	*x = GrantedUserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantedUserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantedUserGroup) ProtoMessage() {}

func (x *GrantedUserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantedUserGroup.ProtoReflect.Descriptor instead.
func (*GrantedUserGroup) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{4}
}

func (x *GrantedUserGroup) GetUserGroupId() uint32 {
	if x != nil {
		return x.UserGroupId
	}
	return 0
}

func (x *GrantedUserGroup) GetUserGroupName() string {
	if x != nil {
		return x.UserGroupName
	}
	return ""
}

func (x *GrantedUserGroup) GetGrantedClusterCount() uint32 {
	if x != nil {
		return x.GrantedClusterCount
	}
	return 0
}

func (x *GrantedUserGroup) GetGrantedRoleCount() uint32 {
	if x != nil {
		return x.GrantedRoleCount
	}
	return 0
}

func (x *GrantedUserGroup) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 用户组授权列表响应
type ListGrantedUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组列表
	List []*GrantedUserGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,optional"`
	// 总数
	Total uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,optional"`
}

func (x *ListGrantedUserGroupResponse) Reset() {
	*x = ListGrantedUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGrantedUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGrantedUserGroupResponse) ProtoMessage() {}

func (x *ListGrantedUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGrantedUserGroupResponse.ProtoReflect.Descriptor instead.
func (*ListGrantedUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{5}
}

func (x *ListGrantedUserGroupResponse) GetList() []*GrantedUserGroup {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListGrantedUserGroupResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 删除用户组授权请求
type DeleteGrantedUserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID
	UserGroupId uint32 `protobuf:"varint,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,optional"`
}

func (x *DeleteGrantedUserGroupRequest) Reset() {
	*x = DeleteGrantedUserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGrantedUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGrantedUserGroupRequest) ProtoMessage() {}

func (x *DeleteGrantedUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGrantedUserGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGrantedUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteGrantedUserGroupRequest) GetUserGroupId() uint32 {
	if x != nil {
		return x.UserGroupId
	}
	return 0
}

// 删除用户组授权响应
type DeleteGrantedUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,optional"`
}

func (x *DeleteGrantedUserGroupResponse) Reset() {
	*x = DeleteGrantedUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGrantedUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGrantedUserGroupResponse) ProtoMessage() {}

func (x *DeleteGrantedUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGrantedUserGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteGrantedUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteGrantedUserGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 编辑用户组授权请求
type UpdateGrantedUserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID
	UserGroupIds []uint32 `protobuf:"varint,1,rep,packed,name=user_group_ids,json=userGroupIds,proto3" json:"user_group_ids,optional"`
	// roles 列表
	Roles []*RoleBinding `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,optional"`
}

func (x *UpdateGrantedUserGroupRequest) Reset() {
	*x = UpdateGrantedUserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGrantedUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGrantedUserGroupRequest) ProtoMessage() {}

func (x *UpdateGrantedUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGrantedUserGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGrantedUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateGrantedUserGroupRequest) GetUserGroupIds() []uint32 {
	if x != nil {
		return x.UserGroupIds
	}
	return nil
}

func (x *UpdateGrantedUserGroupRequest) GetRoles() []*RoleBinding {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 编辑用户组授权响应
type UpdateGrantedUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,optional"`
}

func (x *UpdateGrantedUserGroupResponse) Reset() {
	*x = UpdateGrantedUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGrantedUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGrantedUserGroupResponse) ProtoMessage() {}

func (x *UpdateGrantedUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGrantedUserGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateGrantedUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateGrantedUserGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 用户组列表请求
type ListUserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关键字
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,optional"`
	// 分页
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,optional"`
	// 每页数量
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,optional"`
	// 是否全部
	ListAll uint32 `protobuf:"varint,4,opt,name=list_all,json=listAll,proto3" json:"list_all,optional"`
}

func (x *ListUserGroupRequest) Reset() {
	*x = ListUserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupRequest) ProtoMessage() {}

func (x *ListUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupRequest.ProtoReflect.Descriptor instead.
func (*ListUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{10}
}

func (x *ListUserGroupRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListUserGroupRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserGroupRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserGroupRequest) GetListAll() uint32 {
	if x != nil {
		return x.ListAll
	}
	return 0
}

// 用户组列表响应
type ListUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组列表
	List []*UserGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,optional"`
	// 总数
	Total uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,optional"`
}

func (x *ListUserGroupResponse) Reset() {
	*x = ListUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupResponse) ProtoMessage() {}

func (x *ListUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupResponse.ProtoReflect.Descriptor instead.
func (*ListUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{11}
}

func (x *ListUserGroupResponse) GetList() []*UserGroup {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListUserGroupResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 用户组
type UserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID
	UserGroupId uint32 `protobuf:"varint,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,optional"`
	// 用户组名称
	UserGroupName string `protobuf:"bytes,2,opt,name=user_group_name,json=userGroupName,proto3" json:"user_group_name,optional"`
}

func (x *UserGroup) Reset() {
	*x = UserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroup) ProtoMessage() {}

func (x *UserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroup.ProtoReflect.Descriptor instead.
func (*UserGroup) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{12}
}

func (x *UserGroup) GetUserGroupId() uint32 {
	if x != nil {
		return x.UserGroupId
	}
	return 0
}

func (x *UserGroup) GetUserGroupName() string {
	if x != nil {
		return x.UserGroupName
	}
	return ""
}

// 用户组响应
type UserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组
	List *UserGroup `protobuf:"bytes,1,opt,name=list,proto3" json:"list,optional"`
	// 总数
	Total uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,optional"`
}

func (x *UserGroupResponse) Reset() {
	*x = UserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupResponse) ProtoMessage() {}

func (x *UserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupResponse.ProtoReflect.Descriptor instead.
func (*UserGroupResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{13}
}

func (x *UserGroupResponse) GetList() *UserGroup {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserGroupResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 用户组授权详情请求
type GetGrantedUserGroupDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID
	UserGroupId uint32 `protobuf:"varint,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,optional"`
	// 分页
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,optional"`
	// 每页数量
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,optional"`
	// 是否全部
	ListAll uint32 `protobuf:"varint,4,opt,name=list_all,json=listAll,proto3" json:"list_all,optional"`
}

func (x *GetGrantedUserGroupDetailRequest) Reset() {
	*x = GetGrantedUserGroupDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrantedUserGroupDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrantedUserGroupDetailRequest) ProtoMessage() {}

func (x *GetGrantedUserGroupDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrantedUserGroupDetailRequest.ProtoReflect.Descriptor instead.
func (*GetGrantedUserGroupDetailRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{14}
}

func (x *GetGrantedUserGroupDetailRequest) GetUserGroupId() uint32 {
	if x != nil {
		return x.UserGroupId
	}
	return 0
}

func (x *GetGrantedUserGroupDetailRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGrantedUserGroupDetailRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGrantedUserGroupDetailRequest) GetListAll() uint32 {
	if x != nil {
		return x.ListAll
	}
	return 0
}

type RoleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群ID
	ClusterId uint32 `protobuf:"varint,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,optional"`
	// 集群名称
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	// Namespace 名称
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,optional"`
	// Role 角色ID
	RoleId uint32 `protobuf:"varint,4,opt,name=role_id,json=roleId,proto3" json:"role_id,optional"`
	// Role 角色名称
	RoleName string `protobuf:"bytes,5,opt,name=role_name,json=roleName,proto3" json:"role_name,optional"`
}

func (x *RoleDetail) Reset() {
	*x = RoleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDetail) ProtoMessage() {}

func (x *RoleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDetail.ProtoReflect.Descriptor instead.
func (*RoleDetail) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{15}
}

func (x *RoleDetail) GetClusterId() uint32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *RoleDetail) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *RoleDetail) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleDetail) GetRoleId() uint32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleDetail) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

// 用户组授权详情响应
type GetGrantedUserGroupDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组
	UserGroup *UserGroup `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,optional"`
	// 授权角色列表
	RoleDetail []*RoleDetail `protobuf:"bytes,2,rep,name=role_detail,json=roleDetail,proto3" json:"role_detail,optional"`
}

func (x *GetGrantedUserGroupDetailResponse) Reset() {
	*x = GetGrantedUserGroupDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrantedUserGroupDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrantedUserGroupDetailResponse) ProtoMessage() {}

func (x *GetGrantedUserGroupDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrantedUserGroupDetailResponse.ProtoReflect.Descriptor instead.
func (*GetGrantedUserGroupDetailResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{16}
}

func (x *GetGrantedUserGroupDetailResponse) GetUserGroup() *UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *GetGrantedUserGroupDetailResponse) GetRoleDetail() []*RoleDetail {
	if x != nil {
		return x.RoleDetail
	}
	return nil
}

// 用户列表请求
type ListUserGroupUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户组ID
	UserGroupId uint32 `protobuf:"varint,1,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,optional"`
}

func (x *ListUserGroupUsersRequest) Reset() {
	*x = ListUserGroupUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupUsersRequest) ProtoMessage() {}

func (x *ListUserGroupUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUserGroupUsersRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{17}
}

func (x *ListUserGroupUsersRequest) GetUserGroupId() uint32 {
	if x != nil {
		return x.UserGroupId
	}
	return 0
}

// 用户
type UserGroupUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,optional"`
	// 用户名称
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,optional"`
	// 用户邮箱
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,optional"`
	// 昵称
	NickName string `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" json:"nick_name,optional"`
	// 来源
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,optional"`
}

func (x *UserGroupUser) Reset() {
	*x = UserGroupUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupUser) ProtoMessage() {}

func (x *UserGroupUser) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupUser.ProtoReflect.Descriptor instead.
func (*UserGroupUser) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{18}
}

func (x *UserGroupUser) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserGroupUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserGroupUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserGroupUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserGroupUser) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// 用户列表响应
type ListUserGroupUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户列表
	List []*UserGroupUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list,optional"`
	// 总数
	Total uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,optional"`
}

func (x *ListUserGroupUsersResponse) Reset() {
	*x = ListUserGroupUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserGroupUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserGroupUsersResponse) ProtoMessage() {}

func (x *ListUserGroupUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserGroupUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUserGroupUsersResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{19}
}

func (x *ListUserGroupUsersResponse) GetList() []*UserGroupUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListUserGroupUsersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,optional"`
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,optional"`
	ListAll  uint32 `protobuf:"varint,3,opt,name=list_all,json=listAll,proto3" json:"list_all,optional"`
	Keyword  string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,optional"`
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{20}
}

func (x *ListUserRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserRequest) GetListAll() uint32 {
	if x != nil {
		return x.ListAll
	}
	return 0
}

func (x *ListUserRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ListUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*User `protobuf:"bytes,1,rep,name=list,proto3" json:"list,optional"`
	Total uint32  `protobuf:"varint,2,opt,name=total,proto3" json:"total,optional"`
}

func (x *ListUserResponse) Reset() {
	*x = ListUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse) ProtoMessage() {}

func (x *ListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{21}
}

func (x *ListUserResponse) GetList() []*User {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListUserResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户名
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,optional"`
	// 昵称
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,optional"`
	// 用户ID
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,optional"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_usergroup_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_pb_usergroup_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_pb_usergroup_v1_proto_rawDescGZIP(), []int{22}
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_pb_usergroup_v1_proto protoreflect.FileDescriptor

var file_pb_usergroup_v1_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x0b, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x0b, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x22, 0xfa, 0x01, 0x0a, 0x10, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x27, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31,
	0x0a, 0x12, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x10, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x48, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x7d,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x3a, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x22, 0x61, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x61, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x97, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x22, 0xbb, 0x01, 0x0a, 0x0a,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x44, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xa9, 0x01, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x69, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6a, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4d, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x66, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x32, 0x85, 0x0c, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xff, 0x01, 0x0a, 0x0e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa7, 0x01, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0xca, 0xdb, 0xaa, 0x03, 0x7b, 0x0a, 0x0f,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbb, 0x84, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x12,
	0x0c, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0x1a, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x11,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x1a, 0x16, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a,
	0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x9f, 0x02, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xaf, 0x01, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0xca, 0xdb, 0xaa, 0x03, 0x7a, 0x0a,
	0x0f, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbb, 0x84, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83,
	0x12, 0x0c, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x1a, 0x17,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a,
	0x11, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x1a, 0x15, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a,
	0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0xa0, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb0, 0x01, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0xca, 0xdb, 0xaa, 0x03,
	0x7b, 0x0a, 0x0f, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbb, 0x84, 0xe6, 0x8e, 0x88, 0xe6,
	0x9d, 0x83, 0x12, 0x0c, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86,
	0x1a, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x1a, 0x11, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x1a, 0x16, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x77, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0xc2, 0xdb,
	0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0xc2, 0xdb,
	0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x11, 0x5a, 0x0f,
	0x63, 0x6f, 0x64, 0x6f, 0x2d, 0x63, 0x6e, 0x6d, 0x70, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_usergroup_v1_proto_rawDescOnce sync.Once
	file_pb_usergroup_v1_proto_rawDescData = file_pb_usergroup_v1_proto_rawDesc
)

func file_pb_usergroup_v1_proto_rawDescGZIP() []byte {
	file_pb_usergroup_v1_proto_rawDescOnce.Do(func() {
		file_pb_usergroup_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_usergroup_v1_proto_rawDescData)
	})
	return file_pb_usergroup_v1_proto_rawDescData
}

var file_pb_usergroup_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pb_usergroup_v1_proto_goTypes = []interface{}{
	(*RoleBinding)(nil),                       // 0: usergroup.RoleBinding
	(*GrantUserGroupRequest)(nil),             // 1: usergroup.GrantUserGroupRequest
	(*GrantUserGroupResponse)(nil),            // 2: usergroup.GrantUserGroupResponse
	(*ListGrantedUserGroupRequest)(nil),       // 3: usergroup.ListGrantedUserGroupRequest
	(*GrantedUserGroup)(nil),                  // 4: usergroup.GrantedUserGroup
	(*ListGrantedUserGroupResponse)(nil),      // 5: usergroup.ListGrantedUserGroupResponse
	(*DeleteGrantedUserGroupRequest)(nil),     // 6: usergroup.DeleteGrantedUserGroupRequest
	(*DeleteGrantedUserGroupResponse)(nil),    // 7: usergroup.DeleteGrantedUserGroupResponse
	(*UpdateGrantedUserGroupRequest)(nil),     // 8: usergroup.UpdateGrantedUserGroupRequest
	(*UpdateGrantedUserGroupResponse)(nil),    // 9: usergroup.UpdateGrantedUserGroupResponse
	(*ListUserGroupRequest)(nil),              // 10: usergroup.ListUserGroupRequest
	(*ListUserGroupResponse)(nil),             // 11: usergroup.ListUserGroupResponse
	(*UserGroup)(nil),                         // 12: usergroup.UserGroup
	(*UserGroupResponse)(nil),                 // 13: usergroup.UserGroupResponse
	(*GetGrantedUserGroupDetailRequest)(nil),  // 14: usergroup.GetGrantedUserGroupDetailRequest
	(*RoleDetail)(nil),                        // 15: usergroup.RoleDetail
	(*GetGrantedUserGroupDetailResponse)(nil), // 16: usergroup.GetGrantedUserGroupDetailResponse
	(*ListUserGroupUsersRequest)(nil),         // 17: usergroup.ListUserGroupUsersRequest
	(*UserGroupUser)(nil),                     // 18: usergroup.UserGroupUser
	(*ListUserGroupUsersResponse)(nil),        // 19: usergroup.ListUserGroupUsersResponse
	(*ListUserRequest)(nil),                   // 20: usergroup.ListUserRequest
	(*ListUserResponse)(nil),                  // 21: usergroup.ListUserResponse
	(*User)(nil),                              // 22: usergroup.User
}
var file_pb_usergroup_v1_proto_depIdxs = []int32{
	0,  // 0: usergroup.GrantUserGroupRequest.roles:type_name -> usergroup.RoleBinding
	4,  // 1: usergroup.ListGrantedUserGroupResponse.list:type_name -> usergroup.GrantedUserGroup
	0,  // 2: usergroup.UpdateGrantedUserGroupRequest.roles:type_name -> usergroup.RoleBinding
	12, // 3: usergroup.ListUserGroupResponse.list:type_name -> usergroup.UserGroup
	12, // 4: usergroup.UserGroupResponse.list:type_name -> usergroup.UserGroup
	12, // 5: usergroup.GetGrantedUserGroupDetailResponse.user_group:type_name -> usergroup.UserGroup
	15, // 6: usergroup.GetGrantedUserGroupDetailResponse.role_detail:type_name -> usergroup.RoleDetail
	18, // 7: usergroup.ListUserGroupUsersResponse.list:type_name -> usergroup.UserGroupUser
	22, // 8: usergroup.ListUserResponse.list:type_name -> usergroup.User
	1,  // 9: usergroup.UserGroupService.GrantUserGroup:input_type -> usergroup.GrantUserGroupRequest
	3,  // 10: usergroup.UserGroupService.ListGrantedUserGroup:input_type -> usergroup.ListGrantedUserGroupRequest
	6,  // 11: usergroup.UserGroupService.DeleteGrantedUserGroup:input_type -> usergroup.DeleteGrantedUserGroupRequest
	8,  // 12: usergroup.UserGroupService.UpdateGrantedUserGroup:input_type -> usergroup.UpdateGrantedUserGroupRequest
	14, // 13: usergroup.UserGroupService.GetGrantedUserGroupDetail:input_type -> usergroup.GetGrantedUserGroupDetailRequest
	10, // 14: usergroup.UserGroupService.ListUserGroup:input_type -> usergroup.ListUserGroupRequest
	17, // 15: usergroup.UserGroupService.ListUserGroupUsers:input_type -> usergroup.ListUserGroupUsersRequest
	20, // 16: usergroup.UserGroupService.ListUser:input_type -> usergroup.ListUserRequest
	2,  // 17: usergroup.UserGroupService.GrantUserGroup:output_type -> usergroup.GrantUserGroupResponse
	5,  // 18: usergroup.UserGroupService.ListGrantedUserGroup:output_type -> usergroup.ListGrantedUserGroupResponse
	7,  // 19: usergroup.UserGroupService.DeleteGrantedUserGroup:output_type -> usergroup.DeleteGrantedUserGroupResponse
	9,  // 20: usergroup.UserGroupService.UpdateGrantedUserGroup:output_type -> usergroup.UpdateGrantedUserGroupResponse
	16, // 21: usergroup.UserGroupService.GetGrantedUserGroupDetail:output_type -> usergroup.GetGrantedUserGroupDetailResponse
	11, // 22: usergroup.UserGroupService.ListUserGroup:output_type -> usergroup.ListUserGroupResponse
	19, // 23: usergroup.UserGroupService.ListUserGroupUsers:output_type -> usergroup.ListUserGroupUsersResponse
	21, // 24: usergroup.UserGroupService.ListUser:output_type -> usergroup.ListUserResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pb_usergroup_v1_proto_init() }
func file_pb_usergroup_v1_proto_init() {
	if File_pb_usergroup_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_usergroup_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantUserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGrantedUserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantedUserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGrantedUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGrantedUserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGrantedUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGrantedUserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGrantedUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrantedUserGroupDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrantedUserGroupDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserGroupUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_usergroup_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_usergroup_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_usergroup_v1_proto_goTypes,
		DependencyIndexes: file_pb_usergroup_v1_proto_depIdxs,
		MessageInfos:      file_pb_usergroup_v1_proto_msgTypes,
	}.Build()
	File_pb_usergroup_v1_proto = out.File
	file_pb_usergroup_v1_proto_rawDesc = nil
	file_pb_usergroup_v1_proto_goTypes = nil
	file_pb_usergroup_v1_proto_depIdxs = nil
}
