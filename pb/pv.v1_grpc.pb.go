// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.27.2
// source: pb/pv.v1.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PersistentVolume_ListPersistentVolume_FullMethodName = "/pv.v1.PersistentVolume/ListPersistentVolume"
)

// PersistentVolumeClient is the client API for PersistentVolume service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PersistentVolumeClient interface {
	// 查看-云原生管理-PersistentVolume-列表
	ListPersistentVolume(ctx context.Context, in *ListPersistentVolumeRequest, opts ...grpc.CallOption) (*ListPersistentVolumeResponse, error)
}

type persistentVolumeClient struct {
	cc grpc.ClientConnInterface
}

func NewPersistentVolumeClient(cc grpc.ClientConnInterface) PersistentVolumeClient {
	return &persistentVolumeClient{cc}
}

func (c *persistentVolumeClient) ListPersistentVolume(ctx context.Context, in *ListPersistentVolumeRequest, opts ...grpc.CallOption) (*ListPersistentVolumeResponse, error) {
	out := new(ListPersistentVolumeResponse)
	err := c.cc.Invoke(ctx, PersistentVolume_ListPersistentVolume_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersistentVolumeServer is the server API for PersistentVolume service.
// All implementations must embed UnimplementedPersistentVolumeServer
// for forward compatibility
type PersistentVolumeServer interface {
	// 查看-云原生管理-PersistentVolume-列表
	ListPersistentVolume(context.Context, *ListPersistentVolumeRequest) (*ListPersistentVolumeResponse, error)
	mustEmbedUnimplementedPersistentVolumeServer()
}

// UnimplementedPersistentVolumeServer must be embedded to have forward compatible implementations.
type UnimplementedPersistentVolumeServer struct {
}

func (UnimplementedPersistentVolumeServer) ListPersistentVolume(context.Context, *ListPersistentVolumeRequest) (*ListPersistentVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPersistentVolume not implemented")
}
func (UnimplementedPersistentVolumeServer) mustEmbedUnimplementedPersistentVolumeServer() {}

// UnsafePersistentVolumeServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PersistentVolumeServer will
// result in compilation errors.
type UnsafePersistentVolumeServer interface {
	mustEmbedUnimplementedPersistentVolumeServer()
}

func RegisterPersistentVolumeServer(s grpc.ServiceRegistrar, srv PersistentVolumeServer) {
	s.RegisterService(&PersistentVolume_ServiceDesc, srv)
}

func _PersistentVolume_ListPersistentVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPersistentVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersistentVolumeServer).ListPersistentVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PersistentVolume_ListPersistentVolume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersistentVolumeServer).ListPersistentVolume(ctx, req.(*ListPersistentVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PersistentVolume_ServiceDesc is the grpc.ServiceDesc for PersistentVolume service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PersistentVolume_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pv.v1.PersistentVolume",
	HandlerType: (*PersistentVolumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPersistentVolume",
			Handler:    _PersistentVolume_ListPersistentVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/pv.v1.proto",
}
