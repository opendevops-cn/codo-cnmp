// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.2
// source: pb/sidecarset.v1.proto

package pb

import (
	_ "github.com/Ccheers/protoc-gen-go-kratos-http/khttp"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "k8s.io/api/core/v1"
	v11 "k8s.io/apimachinery/pkg/apis/meta/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 更新方式
type UpdateSideCarSetStrategyRequest_UpdateStrategyType int32

const (
	// 滚动更新
	UpdateSideCarSetStrategyRequest_RollingUpdate UpdateSideCarSetStrategyRequest_UpdateStrategyType = 0
	// 不更新
	UpdateSideCarSetStrategyRequest_NotUpdate UpdateSideCarSetStrategyRequest_UpdateStrategyType = 1
)

// Enum value maps for UpdateSideCarSetStrategyRequest_UpdateStrategyType.
var (
	UpdateSideCarSetStrategyRequest_UpdateStrategyType_name = map[int32]string{
		0: "RollingUpdate",
		1: "NotUpdate",
	}
	UpdateSideCarSetStrategyRequest_UpdateStrategyType_value = map[string]int32{
		"RollingUpdate": 0,
		"NotUpdate":     1,
	}
)

func (x UpdateSideCarSetStrategyRequest_UpdateStrategyType) Enum() *UpdateSideCarSetStrategyRequest_UpdateStrategyType {
	p := new(UpdateSideCarSetStrategyRequest_UpdateStrategyType)
	*p = x
	return p
}

func (x UpdateSideCarSetStrategyRequest_UpdateStrategyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateSideCarSetStrategyRequest_UpdateStrategyType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sidecarset_v1_proto_enumTypes[0].Descriptor()
}

func (UpdateSideCarSetStrategyRequest_UpdateStrategyType) Type() protoreflect.EnumType {
	return &file_pb_sidecarset_v1_proto_enumTypes[0]
}

func (x UpdateSideCarSetStrategyRequest_UpdateStrategyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateSideCarSetStrategyRequest_UpdateStrategyType.Descriptor instead.
func (UpdateSideCarSetStrategyRequest_UpdateStrategyType) EnumDescriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{0, 0}
}

type UpdateSideCarSetStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群名称
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	// 名称
	Name               string                                             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,optional"`
	UpdateStrategyType UpdateSideCarSetStrategyRequest_UpdateStrategyType `protobuf:"varint,4,opt,name=update_strategy_type,json=updateStrategyType,proto3,enum=sidecarset.v1.UpdateSideCarSetStrategyRequest_UpdateStrategyType" json:"update_strategy_type,optional"`
	Partition          string                                             `protobuf:"bytes,6,opt,name=partition,proto3" json:"partition,optional"`
	// 最大不可用副本数
	MaxUnavailable string `protobuf:"bytes,7,opt,name=max_unavailable,json=maxUnavailable,proto3" json:"max_unavailable,optional"`
	// 暂停更新
	Pause bool `protobuf:"varint,8,opt,name=pause,proto3" json:"pause,optional"`
}

func (x *UpdateSideCarSetStrategyRequest) Reset() {
	*x = UpdateSideCarSetStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSideCarSetStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSideCarSetStrategyRequest) ProtoMessage() {}

func (x *UpdateSideCarSetStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSideCarSetStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateSideCarSetStrategyRequest) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateSideCarSetStrategyRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *UpdateSideCarSetStrategyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSideCarSetStrategyRequest) GetUpdateStrategyType() UpdateSideCarSetStrategyRequest_UpdateStrategyType {
	if x != nil {
		return x.UpdateStrategyType
	}
	return UpdateSideCarSetStrategyRequest_RollingUpdate
}

func (x *UpdateSideCarSetStrategyRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *UpdateSideCarSetStrategyRequest) GetMaxUnavailable() string {
	if x != nil {
		return x.MaxUnavailable
	}
	return ""
}

func (x *UpdateSideCarSetStrategyRequest) GetPause() bool {
	if x != nil {
		return x.Pause
	}
	return false
}

type UpdateSideCarSetStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,optional"`
}

func (x *UpdateSideCarSetStrategyResponse) Reset() {
	*x = UpdateSideCarSetStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSideCarSetStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSideCarSetStrategyResponse) ProtoMessage() {}

func (x *UpdateSideCarSetStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSideCarSetStrategyResponse.ProtoReflect.Descriptor instead.
func (*UpdateSideCarSetStrategyResponse) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateSideCarSetStrategyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListSidecarSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Keyword     string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,optional"`
	Page        uint32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,optional"`
	PageSize    uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,optional"`
	ListAll     uint32 `protobuf:"varint,5,opt,name=list_all,proto3" json:"list_all,optional"` // 0: 默认，1: 全部
}

func (x *ListSidecarSetRequest) Reset() {
	*x = ListSidecarSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSidecarSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSidecarSetRequest) ProtoMessage() {}

func (x *ListSidecarSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSidecarSetRequest.ProtoReflect.Descriptor instead.
func (*ListSidecarSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{2}
}

func (x *ListSidecarSetRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ListSidecarSetRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListSidecarSetRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSidecarSetRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSidecarSetRequest) GetListAll() uint32 {
	if x != nil {
		return x.ListAll
	}
	return 0
}

type SideCarSetStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchedPods      uint32 `protobuf:"varint,1,opt,name=matched_pods,json=matchedPods,proto3" json:"matched_pods,optional"`
	ReadyPods        uint32 `protobuf:"varint,2,opt,name=ready_pods,json=readyPods,proto3" json:"ready_pods,optional"`
	UpdatedPods      uint32 `protobuf:"varint,3,opt,name=updated_pods,json=updatedPods,proto3" json:"updated_pods,optional"`
	UpdatedReadyPods uint32 `protobuf:"varint,4,opt,name=updated_ready_pods,json=updatedReadyPods,proto3" json:"updated_ready_pods,optional"`
}

func (x *SideCarSetStatus) Reset() {
	*x = SideCarSetStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideCarSetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideCarSetStatus) ProtoMessage() {}

func (x *SideCarSetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideCarSetStatus.ProtoReflect.Descriptor instead.
func (*SideCarSetStatus) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{3}
}

func (x *SideCarSetStatus) GetMatchedPods() uint32 {
	if x != nil {
		return x.MatchedPods
	}
	return 0
}

func (x *SideCarSetStatus) GetReadyPods() uint32 {
	if x != nil {
		return x.ReadyPods
	}
	return 0
}

func (x *SideCarSetStatus) GetUpdatedPods() uint32 {
	if x != nil {
		return x.UpdatedPods
	}
	return 0
}

func (x *SideCarSetStatus) GetUpdatedReadyPods() uint32 {
	if x != nil {
		return x.UpdatedReadyPods
	}
	return 0
}

type SidecarSetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,optional"`
	// 已就绪
	ReadyPods uint32 `protobuf:"varint,7,opt,name=ready_pods,json=readyPods,proto3" json:"ready_pods,optional"`
	// 总数
	MatchedPods uint32 `protobuf:"varint,8,opt,name=matched_pods,json=matchedPods,proto3" json:"matched_pods,optional"`
	// 已更新
	UpdatedPods uint32 `protobuf:"varint,3,opt,name=updated_pods,json=updatedPods,proto3" json:"updated_pods,optional"`
	// 已更新可用
	UpdatedReadyPods uint32 `protobuf:"varint,4,opt,name=updated_ready_pods,json=updatedReadyPods,proto3" json:"updated_ready_pods,optional"`
	// 容器
	Containers []*v1.Container `protobuf:"bytes,11,rep,name=containers,proto3" json:"containers,optional"`
	// 创建时间
	CreateTime uint64 `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,optional"`
	// yaml
	Yaml string `protobuf:"bytes,10,opt,name=yaml,proto3" json:"yaml,optional"`
	// 标签
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,optional" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 注解
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,optional" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 选择器
	Selector *v11.LabelSelector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,optional"`
	// 是否关注
	IsFollowed bool              `protobuf:"varint,14,opt,name=is_followed,json=is_follow,proto3" json:"is_followed,optional"`
	Status     *SideCarSetStatus `protobuf:"bytes,13,opt,name=status,proto3" json:"status,optional"`
	// 更新策略
	UpdateStrategy *UpdateSideCarSetStrategyRequest `protobuf:"bytes,15,opt,name=update_strategy,json=updateStrategy,proto3" json:"update_strategy,optional"`
}

func (x *SidecarSetItem) Reset() {
	*x = SidecarSetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarSetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarSetItem) ProtoMessage() {}

func (x *SidecarSetItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidecarSetItem.ProtoReflect.Descriptor instead.
func (*SidecarSetItem) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{4}
}

func (x *SidecarSetItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SidecarSetItem) GetReadyPods() uint32 {
	if x != nil {
		return x.ReadyPods
	}
	return 0
}

func (x *SidecarSetItem) GetMatchedPods() uint32 {
	if x != nil {
		return x.MatchedPods
	}
	return 0
}

func (x *SidecarSetItem) GetUpdatedPods() uint32 {
	if x != nil {
		return x.UpdatedPods
	}
	return 0
}

func (x *SidecarSetItem) GetUpdatedReadyPods() uint32 {
	if x != nil {
		return x.UpdatedReadyPods
	}
	return 0
}

func (x *SidecarSetItem) GetContainers() []*v1.Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *SidecarSetItem) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SidecarSetItem) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

func (x *SidecarSetItem) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SidecarSetItem) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *SidecarSetItem) GetSelector() *v11.LabelSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *SidecarSetItem) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *SidecarSetItem) GetStatus() *SideCarSetStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SidecarSetItem) GetUpdateStrategy() *UpdateSideCarSetStrategyRequest {
	if x != nil {
		return x.UpdateStrategy
	}
	return nil
}

type ListSidecarSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32            `protobuf:"varint,1,opt,name=total,proto3" json:"total,optional"`
	List  []*SidecarSetItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,optional"`
}

func (x *ListSidecarSetResponse) Reset() {
	*x = ListSidecarSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSidecarSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSidecarSetResponse) ProtoMessage() {}

func (x *ListSidecarSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSidecarSetResponse.ProtoReflect.Descriptor instead.
func (*ListSidecarSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{5}
}

func (x *ListSidecarSetResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSidecarSetResponse) GetList() []*SidecarSetItem {
	if x != nil {
		return x.List
	}
	return nil
}

type GetSidecarSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,optional"`
}

func (x *GetSidecarSetRequest) Reset() {
	*x = GetSidecarSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSidecarSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSidecarSetRequest) ProtoMessage() {}

func (x *GetSidecarSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSidecarSetRequest.ProtoReflect.Descriptor instead.
func (*GetSidecarSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{6}
}

func (x *GetSidecarSetRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetSidecarSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSidecarSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *SidecarSetItem `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,optional"`
}

func (x *GetSidecarSetResponse) Reset() {
	*x = GetSidecarSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSidecarSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSidecarSetResponse) ProtoMessage() {}

func (x *GetSidecarSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSidecarSetResponse.ProtoReflect.Descriptor instead.
func (*GetSidecarSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{7}
}

func (x *GetSidecarSetResponse) GetDetail() *SidecarSetItem {
	if x != nil {
		return x.Detail
	}
	return nil
}

type DeleteSidecarSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,optional"`
}

func (x *DeleteSidecarSetRequest) Reset() {
	*x = DeleteSidecarSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSidecarSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSidecarSetRequest) ProtoMessage() {}

func (x *DeleteSidecarSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSidecarSetRequest.ProtoReflect.Descriptor instead.
func (*DeleteSidecarSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSidecarSetRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *DeleteSidecarSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteSidecarSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,optional"`
}

func (x *DeleteSidecarSetResponse) Reset() {
	*x = DeleteSidecarSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sidecarset_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSidecarSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSidecarSetResponse) ProtoMessage() {}

func (x *DeleteSidecarSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sidecarset_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSidecarSetResponse.ProtoReflect.Descriptor instead.
func (*DeleteSidecarSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_sidecarset_v1_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteSidecarSetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_pb_sidecarset_v1_proto protoreflect.FileDescriptor

var file_pb_sidecarset_v1_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x62, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6b, 0x38, 0x73, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x6b, 0x38, 0x73, 0x2f, 0x69, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x03, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x14, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78,
	0x5f, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01,
	0x22, 0x3c, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x43, 0x61,
	0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xad,
	0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x22, 0xd5,
	0x01, 0x0a, 0x10, 0x53, 0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x70,
	0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x50, 0x6f,
	0x64, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x28, 0x00, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x79, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x2d, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x12,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x2a, 0x02, 0x28, 0x00, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x50, 0x6f, 0x64, 0x73, 0x22, 0xae, 0x07, 0x0a, 0x0e, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x50, 0x6f, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x50,
	0x6f, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f,
	0x64, 0x73, 0x12, 0x38, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x12, 0x46, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x55,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5c,
	0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x61, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x68, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x32, 0xb6, 0x06, 0x0a, 0x0a, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74,
	0x12, 0x83, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x53, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x24, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65,
	0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x73, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0xa7, 0x02, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x2e, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x01, 0xc2, 0xdb, 0xaa, 0x03,
	0x00, 0xca, 0xdb, 0xaa, 0x03, 0x6a, 0x0a, 0x0a, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53,
	0x65, 0x74, 0x12, 0x12, 0xe7, 0xbc, 0x96, 0xe8, 0xbe, 0x91, 0xe5, 0x8d, 0x87, 0xe7, 0xba, 0xa7,
	0xe7, 0xad, 0x96, 0xe7, 0x95, 0xa5, 0x1a, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x0d, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x00, 0x1a, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x0a, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53,
	0x65, 0x74, 0x1a, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xf2, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x73, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0xc2, 0xdb,
	0xaa, 0x03, 0x00, 0xca, 0xdb, 0xaa, 0x03, 0x5e, 0x0a, 0x0a, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x53, 0x65, 0x74, 0x12, 0x06, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x17, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x1a, 0x00, 0x1a, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x0a, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x74, 0x1a, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x73, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x63, 0x6f,
	0x64, 0x6f, 0x2d, 0x63, 0x6e, 0x6d, 0x70, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_sidecarset_v1_proto_rawDescOnce sync.Once
	file_pb_sidecarset_v1_proto_rawDescData = file_pb_sidecarset_v1_proto_rawDesc
)

func file_pb_sidecarset_v1_proto_rawDescGZIP() []byte {
	file_pb_sidecarset_v1_proto_rawDescOnce.Do(func() {
		file_pb_sidecarset_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_sidecarset_v1_proto_rawDescData)
	})
	return file_pb_sidecarset_v1_proto_rawDescData
}

var file_pb_sidecarset_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_sidecarset_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pb_sidecarset_v1_proto_goTypes = []interface{}{
	(UpdateSideCarSetStrategyRequest_UpdateStrategyType)(0), // 0: sidecarset.v1.UpdateSideCarSetStrategyRequest.UpdateStrategyType
	(*UpdateSideCarSetStrategyRequest)(nil),                 // 1: sidecarset.v1.UpdateSideCarSetStrategyRequest
	(*UpdateSideCarSetStrategyResponse)(nil),                // 2: sidecarset.v1.UpdateSideCarSetStrategyResponse
	(*ListSidecarSetRequest)(nil),                           // 3: sidecarset.v1.ListSidecarSetRequest
	(*SideCarSetStatus)(nil),                                // 4: sidecarset.v1.SideCarSetStatus
	(*SidecarSetItem)(nil),                                  // 5: sidecarset.v1.SidecarSetItem
	(*ListSidecarSetResponse)(nil),                          // 6: sidecarset.v1.ListSidecarSetResponse
	(*GetSidecarSetRequest)(nil),                            // 7: sidecarset.v1.GetSidecarSetRequest
	(*GetSidecarSetResponse)(nil),                           // 8: sidecarset.v1.GetSidecarSetResponse
	(*DeleteSidecarSetRequest)(nil),                         // 9: sidecarset.v1.DeleteSidecarSetRequest
	(*DeleteSidecarSetResponse)(nil),                        // 10: sidecarset.v1.DeleteSidecarSetResponse
	nil,                                                     // 11: sidecarset.v1.SidecarSetItem.LabelsEntry
	nil,                                                     // 12: sidecarset.v1.SidecarSetItem.AnnotationsEntry
	(*v1.Container)(nil),                                    // 13: k8s.io.api.core.v1.Container
	(*v11.LabelSelector)(nil),                               // 14: k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
}
var file_pb_sidecarset_v1_proto_depIdxs = []int32{
	0,  // 0: sidecarset.v1.UpdateSideCarSetStrategyRequest.update_strategy_type:type_name -> sidecarset.v1.UpdateSideCarSetStrategyRequest.UpdateStrategyType
	13, // 1: sidecarset.v1.SidecarSetItem.containers:type_name -> k8s.io.api.core.v1.Container
	11, // 2: sidecarset.v1.SidecarSetItem.labels:type_name -> sidecarset.v1.SidecarSetItem.LabelsEntry
	12, // 3: sidecarset.v1.SidecarSetItem.annotations:type_name -> sidecarset.v1.SidecarSetItem.AnnotationsEntry
	14, // 4: sidecarset.v1.SidecarSetItem.selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	4,  // 5: sidecarset.v1.SidecarSetItem.status:type_name -> sidecarset.v1.SideCarSetStatus
	1,  // 6: sidecarset.v1.SidecarSetItem.update_strategy:type_name -> sidecarset.v1.UpdateSideCarSetStrategyRequest
	5,  // 7: sidecarset.v1.ListSidecarSetResponse.list:type_name -> sidecarset.v1.SidecarSetItem
	5,  // 8: sidecarset.v1.GetSidecarSetResponse.detail:type_name -> sidecarset.v1.SidecarSetItem
	3,  // 9: sidecarset.v1.SidecarSet.ListSidecarSet:input_type -> sidecarset.v1.ListSidecarSetRequest
	7,  // 10: sidecarset.v1.SidecarSet.GetSidecarSet:input_type -> sidecarset.v1.GetSidecarSetRequest
	1,  // 11: sidecarset.v1.SidecarSet.UpdateSideCarSetStrategy:input_type -> sidecarset.v1.UpdateSideCarSetStrategyRequest
	9,  // 12: sidecarset.v1.SidecarSet.DeleteSidecarSet:input_type -> sidecarset.v1.DeleteSidecarSetRequest
	6,  // 13: sidecarset.v1.SidecarSet.ListSidecarSet:output_type -> sidecarset.v1.ListSidecarSetResponse
	8,  // 14: sidecarset.v1.SidecarSet.GetSidecarSet:output_type -> sidecarset.v1.GetSidecarSetResponse
	2,  // 15: sidecarset.v1.SidecarSet.UpdateSideCarSetStrategy:output_type -> sidecarset.v1.UpdateSideCarSetStrategyResponse
	10, // 16: sidecarset.v1.SidecarSet.DeleteSidecarSet:output_type -> sidecarset.v1.DeleteSidecarSetResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pb_sidecarset_v1_proto_init() }
func file_pb_sidecarset_v1_proto_init() {
	if File_pb_sidecarset_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_sidecarset_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSideCarSetStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSideCarSetStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSidecarSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideCarSetStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarSetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSidecarSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSidecarSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSidecarSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSidecarSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sidecarset_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSidecarSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_sidecarset_v1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_sidecarset_v1_proto_goTypes,
		DependencyIndexes: file_pb_sidecarset_v1_proto_depIdxs,
		EnumInfos:         file_pb_sidecarset_v1_proto_enumTypes,
		MessageInfos:      file_pb_sidecarset_v1_proto_msgTypes,
	}.Build()
	File_pb_sidecarset_v1_proto = out.File
	file_pb_sidecarset_v1_proto_rawDesc = nil
	file_pb_sidecarset_v1_proto_goTypes = nil
	file_pb_sidecarset_v1_proto_depIdxs = nil
}
