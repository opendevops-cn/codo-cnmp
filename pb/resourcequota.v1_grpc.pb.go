// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.27.2
// source: pb/resourcequota.v1.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ResourceQuota_ListResourceQuota_FullMethodName           = "/resourcequota.v1.ResourceQuota/ListResourceQuota"
	ResourceQuota_CreateResourceQuota_FullMethodName         = "/resourcequota.v1.ResourceQuota/CreateResourceQuota"
	ResourceQuota_UpdateResourceQuota_FullMethodName         = "/resourcequota.v1.ResourceQuota/UpdateResourceQuota"
	ResourceQuota_CreateOrUpdateResourceQuota_FullMethodName = "/resourcequota.v1.ResourceQuota/CreateOrUpdateResourceQuota"
	ResourceQuota_GetResourceQuotaDetail_FullMethodName      = "/resourcequota.v1.ResourceQuota/GetResourceQuotaDetail"
	ResourceQuota_DeleteResourceQuota_FullMethodName         = "/resourcequota.v1.ResourceQuota/DeleteResourceQuota"
)

// ResourceQuotaClient is the client API for ResourceQuota service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ResourceQuotaClient interface {
	// 查看-云原生管理-ResourceQuota-列表
	ListResourceQuota(ctx context.Context, in *ListResourceQuotaRequest, opts ...grpc.CallOption) (*ListResourceQuotaResponse, error)
	// 管理-云原生管理-ResourceQuota-创建
	CreateResourceQuota(ctx context.Context, in *CreateResourceQuotaRequest, opts ...grpc.CallOption) (*CreateResourceQuotaResponse, error)
	// 管理-云原生管理-ResourceQuota-编辑
	UpdateResourceQuota(ctx context.Context, in *CreateResourceQuotaRequest, opts ...grpc.CallOption) (*CreateResourceQuotaResponse, error)
	// 管理-云原生管理-ResourceQuota-创建或编辑
	CreateOrUpdateResourceQuota(ctx context.Context, in *CreateResourceQuotaRequest, opts ...grpc.CallOption) (*CreateResourceQuotaResponse, error)
	// 查看-云原生管理-ResourceQuota-详情
	GetResourceQuotaDetail(ctx context.Context, in *ResourceQuotaDetailRequest, opts ...grpc.CallOption) (*ResourceQuotaDetailResponse, error)
	// 管理-云原生管理-ResourceQuota-删除
	DeleteResourceQuota(ctx context.Context, in *DeleteResourceQuotaRequest, opts ...grpc.CallOption) (*DeleteResourceQuotaResponse, error)
}

type resourceQuotaClient struct {
	cc grpc.ClientConnInterface
}

func NewResourceQuotaClient(cc grpc.ClientConnInterface) ResourceQuotaClient {
	return &resourceQuotaClient{cc}
}

func (c *resourceQuotaClient) ListResourceQuota(ctx context.Context, in *ListResourceQuotaRequest, opts ...grpc.CallOption) (*ListResourceQuotaResponse, error) {
	out := new(ListResourceQuotaResponse)
	err := c.cc.Invoke(ctx, ResourceQuota_ListResourceQuota_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaClient) CreateResourceQuota(ctx context.Context, in *CreateResourceQuotaRequest, opts ...grpc.CallOption) (*CreateResourceQuotaResponse, error) {
	out := new(CreateResourceQuotaResponse)
	err := c.cc.Invoke(ctx, ResourceQuota_CreateResourceQuota_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaClient) UpdateResourceQuota(ctx context.Context, in *CreateResourceQuotaRequest, opts ...grpc.CallOption) (*CreateResourceQuotaResponse, error) {
	out := new(CreateResourceQuotaResponse)
	err := c.cc.Invoke(ctx, ResourceQuota_UpdateResourceQuota_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaClient) CreateOrUpdateResourceQuota(ctx context.Context, in *CreateResourceQuotaRequest, opts ...grpc.CallOption) (*CreateResourceQuotaResponse, error) {
	out := new(CreateResourceQuotaResponse)
	err := c.cc.Invoke(ctx, ResourceQuota_CreateOrUpdateResourceQuota_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaClient) GetResourceQuotaDetail(ctx context.Context, in *ResourceQuotaDetailRequest, opts ...grpc.CallOption) (*ResourceQuotaDetailResponse, error) {
	out := new(ResourceQuotaDetailResponse)
	err := c.cc.Invoke(ctx, ResourceQuota_GetResourceQuotaDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaClient) DeleteResourceQuota(ctx context.Context, in *DeleteResourceQuotaRequest, opts ...grpc.CallOption) (*DeleteResourceQuotaResponse, error) {
	out := new(DeleteResourceQuotaResponse)
	err := c.cc.Invoke(ctx, ResourceQuota_DeleteResourceQuota_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceQuotaServer is the server API for ResourceQuota service.
// All implementations must embed UnimplementedResourceQuotaServer
// for forward compatibility
type ResourceQuotaServer interface {
	// 查看-云原生管理-ResourceQuota-列表
	ListResourceQuota(context.Context, *ListResourceQuotaRequest) (*ListResourceQuotaResponse, error)
	// 管理-云原生管理-ResourceQuota-创建
	CreateResourceQuota(context.Context, *CreateResourceQuotaRequest) (*CreateResourceQuotaResponse, error)
	// 管理-云原生管理-ResourceQuota-编辑
	UpdateResourceQuota(context.Context, *CreateResourceQuotaRequest) (*CreateResourceQuotaResponse, error)
	// 管理-云原生管理-ResourceQuota-创建或编辑
	CreateOrUpdateResourceQuota(context.Context, *CreateResourceQuotaRequest) (*CreateResourceQuotaResponse, error)
	// 查看-云原生管理-ResourceQuota-详情
	GetResourceQuotaDetail(context.Context, *ResourceQuotaDetailRequest) (*ResourceQuotaDetailResponse, error)
	// 管理-云原生管理-ResourceQuota-删除
	DeleteResourceQuota(context.Context, *DeleteResourceQuotaRequest) (*DeleteResourceQuotaResponse, error)
	mustEmbedUnimplementedResourceQuotaServer()
}

// UnimplementedResourceQuotaServer must be embedded to have forward compatible implementations.
type UnimplementedResourceQuotaServer struct {
}

func (UnimplementedResourceQuotaServer) ListResourceQuota(context.Context, *ListResourceQuotaRequest) (*ListResourceQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceQuota not implemented")
}
func (UnimplementedResourceQuotaServer) CreateResourceQuota(context.Context, *CreateResourceQuotaRequest) (*CreateResourceQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResourceQuota not implemented")
}
func (UnimplementedResourceQuotaServer) UpdateResourceQuota(context.Context, *CreateResourceQuotaRequest) (*CreateResourceQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateResourceQuota not implemented")
}
func (UnimplementedResourceQuotaServer) CreateOrUpdateResourceQuota(context.Context, *CreateResourceQuotaRequest) (*CreateResourceQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrUpdateResourceQuota not implemented")
}
func (UnimplementedResourceQuotaServer) GetResourceQuotaDetail(context.Context, *ResourceQuotaDetailRequest) (*ResourceQuotaDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceQuotaDetail not implemented")
}
func (UnimplementedResourceQuotaServer) DeleteResourceQuota(context.Context, *DeleteResourceQuotaRequest) (*DeleteResourceQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteResourceQuota not implemented")
}
func (UnimplementedResourceQuotaServer) mustEmbedUnimplementedResourceQuotaServer() {}

// UnsafeResourceQuotaServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ResourceQuotaServer will
// result in compilation errors.
type UnsafeResourceQuotaServer interface {
	mustEmbedUnimplementedResourceQuotaServer()
}

func RegisterResourceQuotaServer(s grpc.ServiceRegistrar, srv ResourceQuotaServer) {
	s.RegisterService(&ResourceQuota_ServiceDesc, srv)
}

func _ResourceQuota_ListResourceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaServer).ListResourceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceQuota_ListResourceQuota_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaServer).ListResourceQuota(ctx, req.(*ListResourceQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuota_CreateResourceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourceQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaServer).CreateResourceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceQuota_CreateResourceQuota_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaServer).CreateResourceQuota(ctx, req.(*CreateResourceQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuota_UpdateResourceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourceQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaServer).UpdateResourceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceQuota_UpdateResourceQuota_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaServer).UpdateResourceQuota(ctx, req.(*CreateResourceQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuota_CreateOrUpdateResourceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourceQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaServer).CreateOrUpdateResourceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceQuota_CreateOrUpdateResourceQuota_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaServer).CreateOrUpdateResourceQuota(ctx, req.(*CreateResourceQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuota_GetResourceQuotaDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceQuotaDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaServer).GetResourceQuotaDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceQuota_GetResourceQuotaDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaServer).GetResourceQuotaDetail(ctx, req.(*ResourceQuotaDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuota_DeleteResourceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResourceQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaServer).DeleteResourceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceQuota_DeleteResourceQuota_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaServer).DeleteResourceQuota(ctx, req.(*DeleteResourceQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ResourceQuota_ServiceDesc is the grpc.ServiceDesc for ResourceQuota service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ResourceQuota_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "resourcequota.v1.ResourceQuota",
	HandlerType: (*ResourceQuotaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListResourceQuota",
			Handler:    _ResourceQuota_ListResourceQuota_Handler,
		},
		{
			MethodName: "CreateResourceQuota",
			Handler:    _ResourceQuota_CreateResourceQuota_Handler,
		},
		{
			MethodName: "UpdateResourceQuota",
			Handler:    _ResourceQuota_UpdateResourceQuota_Handler,
		},
		{
			MethodName: "CreateOrUpdateResourceQuota",
			Handler:    _ResourceQuota_CreateOrUpdateResourceQuota_Handler,
		},
		{
			MethodName: "GetResourceQuotaDetail",
			Handler:    _ResourceQuota_GetResourceQuotaDetail_Handler,
		},
		{
			MethodName: "DeleteResourceQuota",
			Handler:    _ResourceQuota_DeleteResourceQuota_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/resourcequota.v1.proto",
}
