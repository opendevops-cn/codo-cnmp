// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.2
// source: pb/crr.v1.proto

package pb

import (
	_ "github.com/Ccheers/protoc-gen-go-kratos-http/khttp"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询CRR详情请求
type GetCRRDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,optional"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,optional"`
}

func (x *GetCRRDetailRequest) Reset() {
	*x = GetCRRDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCRRDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCRRDetailRequest) ProtoMessage() {}

func (x *GetCRRDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCRRDetailRequest.ProtoReflect.Descriptor instead.
func (*GetCRRDetailRequest) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{0}
}

func (x *GetCRRDetailRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetCRRDetailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetCRRDetailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 查询CRR详情响应
type GetCRRDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pod 名称
	PodName string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,optional"`
	// 重启容器总数量
	TotalCount uint32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,optional"`
	// 成功重启容器数量
	SuccessCount uint32 `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,optional"`
}

func (x *GetCRRDetailResponse) Reset() {
	*x = GetCRRDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCRRDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCRRDetailResponse) ProtoMessage() {}

func (x *GetCRRDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCRRDetailResponse.ProtoReflect.Descriptor instead.
func (*GetCRRDetailResponse) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetCRRDetailResponse) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetCRRDetailResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetCRRDetailResponse) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

type BatchCRRDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,optional"`
	PodName      string `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,optional"`
	TotalCount   uint32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,optional"`
	SuccessCount uint32 `protobuf:"varint,4,opt,name=success_count,json=successCount,proto3" json:"success_count,optional"`
}

func (x *BatchCRRDetail) Reset() {
	*x = BatchCRRDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCRRDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCRRDetail) ProtoMessage() {}

func (x *BatchCRRDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCRRDetail.ProtoReflect.Descriptor instead.
func (*BatchCRRDetail) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{2}
}

func (x *BatchCRRDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BatchCRRDetail) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *BatchCRRDetail) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BatchCRRDetail) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

type RequestContainerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pod 名称
	PodName string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,optional"`
	// 容器列表
	ContainerNames []string `protobuf:"bytes,2,rep,name=container_names,json=containerNames,proto3" json:"container_names,optional"`
}

func (x *RequestContainerItem) Reset() {
	*x = RequestContainerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestContainerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestContainerItem) ProtoMessage() {}

func (x *RequestContainerItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestContainerItem.ProtoReflect.Descriptor instead.
func (*RequestContainerItem) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{3}
}

func (x *RequestContainerItem) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *RequestContainerItem) GetContainerNames() []string {
	if x != nil {
		return x.ContainerNames
	}
	return nil
}

// 批量创建CRR请求
type BatchCreateCRRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName    string                  `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Namespace      string                  `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,optional"`
	ContainerItems []*RequestContainerItem `protobuf:"bytes,3,rep,name=container_items,json=containerItems,proto3" json:"container_items,optional"`
}

func (x *BatchCreateCRRRequest) Reset() {
	*x = BatchCreateCRRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateCRRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateCRRRequest) ProtoMessage() {}

func (x *BatchCreateCRRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateCRRRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateCRRRequest) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{4}
}

func (x *BatchCreateCRRRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *BatchCreateCRRRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BatchCreateCRRRequest) GetContainerItems() []*RequestContainerItem {
	if x != nil {
		return x.ContainerItems
	}
	return nil
}

// 创建CRR请求
type CreateCRRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName    string   `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Namespace      string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,optional"`
	PodName        string   `protobuf:"bytes,3,opt,name=pod_name,json=podName,proto3" json:"pod_name,optional"`
	ContainerNames []string `protobuf:"bytes,4,rep,name=container_names,json=containerNames,proto3" json:"container_names,optional"`
}

func (x *CreateCRRRequest) Reset() {
	*x = CreateCRRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCRRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCRRRequest) ProtoMessage() {}

func (x *CreateCRRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCRRRequest.ProtoReflect.Descriptor instead.
func (*CreateCRRRequest) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCRRRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *CreateCRRRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateCRRRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *CreateCRRRequest) GetContainerNames() []string {
	if x != nil {
		return x.ContainerNames
	}
	return nil
}

// 创建CRR响应
type CreateCRRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ResponseContainerItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,optional"`
}

func (x *CreateCRRResponse) Reset() {
	*x = CreateCRRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCRRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCRRResponse) ProtoMessage() {}

func (x *CreateCRRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCRRResponse.ProtoReflect.Descriptor instead.
func (*CreateCRRResponse) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCRRResponse) GetItem() *ResponseContainerItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type ResponseContainerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pod 名称
	PodName string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,optional"`
	// CRRName
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,optional"`
}

func (x *ResponseContainerItem) Reset() {
	*x = ResponseContainerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseContainerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseContainerItem) ProtoMessage() {}

func (x *ResponseContainerItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseContainerItem.ProtoReflect.Descriptor instead.
func (*ResponseContainerItem) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseContainerItem) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ResponseContainerItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 批量创建CRR响应
type BatchCreateCRRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ResponseContainerItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,optional"`
}

func (x *BatchCreateCRRResponse) Reset() {
	*x = BatchCreateCRRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateCRRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateCRRResponse) ProtoMessage() {}

func (x *BatchCreateCRRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateCRRResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateCRRResponse) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{8}
}

func (x *BatchCreateCRRResponse) GetList() []*ResponseContainerItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 批量查询CRR详情请求
type GetBatchCRRDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string   `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,optional"`
	Namespace   string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,optional"`
	Names       []string `protobuf:"bytes,3,rep,name=names,proto3" json:"names,optional"`
}

func (x *GetBatchCRRDetailRequest) Reset() {
	*x = GetBatchCRRDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatchCRRDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchCRRDetailRequest) ProtoMessage() {}

func (x *GetBatchCRRDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchCRRDetailRequest.ProtoReflect.Descriptor instead.
func (*GetBatchCRRDetailRequest) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{9}
}

func (x *GetBatchCRRDetailRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetBatchCRRDetailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetBatchCRRDetailRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// 批量查询CRR详情响应
type GetBatchCRRDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BatchCRRDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,optional"`
}

func (x *GetBatchCRRDetailResponse) Reset() {
	*x = GetBatchCRRDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crr_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBatchCRRDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchCRRDetailResponse) ProtoMessage() {}

func (x *GetBatchCRRDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crr_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchCRRDetailResponse.ProtoReflect.Descriptor instead.
func (*GetBatchCRRDetailResponse) Descriptor() ([]byte, []int) {
	return file_pb_crr_v1_proto_rawDescGZIP(), []int{10}
}

func (x *GetBatchCRRDetailResponse) GetList() []*BatchCRRDetail {
	if x != nil {
		return x.List
	}
	return nil
}

var File_pb_crr_v1_proto protoreflect.FileDescriptor

var file_pb_crr_v1_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0d, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0c, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x0e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x08, 0x70,
	0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xc8, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a,
	0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0b, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x5e, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x08, 0x70,
	0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x52, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x72, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x96, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x52, 0x52, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0c,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x32, 0x8f, 0x05, 0x0a, 0x03, 0x43, 0x52, 0x52, 0x12, 0x6a, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x72, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x72, 0x2f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0xd7, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0xca,
	0xdb, 0xaa, 0x03, 0x58, 0x0a, 0x06, 0xe5, 0xae, 0xb9, 0xe5, 0x99, 0xa8, 0x12, 0x06, 0xe5, 0x88,
	0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x0b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x03, 0x43,
	0x52, 0x52, 0x1a, 0x08, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x00, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x72, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x7e, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x52, 0x52,
	0x12, 0x20, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x52, 0x52, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x72, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0xc1, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x72, 0x12, 0x18, 0x2e,
	0x63, 0x72, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x72, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x52, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7f, 0xc2, 0xdb, 0xaa, 0x03, 0x00, 0xca, 0xdb, 0xaa, 0x03, 0x58, 0x0a, 0x06,
	0xe5, 0xae, 0xb9, 0xe5, 0x99, 0xa8, 0x12, 0x06, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x17,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a,
	0x0b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x03, 0x43, 0x52, 0x52, 0x1a, 0x08, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22,
	0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x72, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x63, 0x6f, 0x64, 0x6f, 0x2d, 0x63, 0x6e, 0x6d, 0x70,
	0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_crr_v1_proto_rawDescOnce sync.Once
	file_pb_crr_v1_proto_rawDescData = file_pb_crr_v1_proto_rawDesc
)

func file_pb_crr_v1_proto_rawDescGZIP() []byte {
	file_pb_crr_v1_proto_rawDescOnce.Do(func() {
		file_pb_crr_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_crr_v1_proto_rawDescData)
	})
	return file_pb_crr_v1_proto_rawDescData
}

var file_pb_crr_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pb_crr_v1_proto_goTypes = []interface{}{
	(*GetCRRDetailRequest)(nil),       // 0: crr.v1.GetCRRDetailRequest
	(*GetCRRDetailResponse)(nil),      // 1: crr.v1.GetCRRDetailResponse
	(*BatchCRRDetail)(nil),            // 2: crr.v1.BatchCRRDetail
	(*RequestContainerItem)(nil),      // 3: crr.v1.RequestContainerItem
	(*BatchCreateCRRRequest)(nil),     // 4: crr.v1.BatchCreateCRRRequest
	(*CreateCRRRequest)(nil),          // 5: crr.v1.CreateCRRRequest
	(*CreateCRRResponse)(nil),         // 6: crr.v1.CreateCRRResponse
	(*ResponseContainerItem)(nil),     // 7: crr.v1.ResponseContainerItem
	(*BatchCreateCRRResponse)(nil),    // 8: crr.v1.BatchCreateCRRResponse
	(*GetBatchCRRDetailRequest)(nil),  // 9: crr.v1.GetBatchCRRDetailRequest
	(*GetBatchCRRDetailResponse)(nil), // 10: crr.v1.GetBatchCRRDetailResponse
}
var file_pb_crr_v1_proto_depIdxs = []int32{
	3,  // 0: crr.v1.BatchCreateCRRRequest.container_items:type_name -> crr.v1.RequestContainerItem
	7,  // 1: crr.v1.CreateCRRResponse.item:type_name -> crr.v1.ResponseContainerItem
	7,  // 2: crr.v1.BatchCreateCRRResponse.list:type_name -> crr.v1.ResponseContainerItem
	2,  // 3: crr.v1.GetBatchCRRDetailResponse.list:type_name -> crr.v1.BatchCRRDetail
	0,  // 4: crr.v1.CRR.GetCRRDetail:input_type -> crr.v1.GetCRRDetailRequest
	4,  // 5: crr.v1.CRR.BatchCreateCrr:input_type -> crr.v1.BatchCreateCRRRequest
	9,  // 6: crr.v1.CRR.BatchQueryCRR:input_type -> crr.v1.GetBatchCRRDetailRequest
	5,  // 7: crr.v1.CRR.CreateCrr:input_type -> crr.v1.CreateCRRRequest
	1,  // 8: crr.v1.CRR.GetCRRDetail:output_type -> crr.v1.GetCRRDetailResponse
	8,  // 9: crr.v1.CRR.BatchCreateCrr:output_type -> crr.v1.BatchCreateCRRResponse
	10, // 10: crr.v1.CRR.BatchQueryCRR:output_type -> crr.v1.GetBatchCRRDetailResponse
	6,  // 11: crr.v1.CRR.CreateCrr:output_type -> crr.v1.CreateCRRResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pb_crr_v1_proto_init() }
func file_pb_crr_v1_proto_init() {
	if File_pb_crr_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_crr_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCRRDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCRRDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCRRDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestContainerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateCRRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCRRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCRRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseContainerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateCRRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatchCRRDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crr_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBatchCRRDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_crr_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_crr_v1_proto_goTypes,
		DependencyIndexes: file_pb_crr_v1_proto_depIdxs,
		MessageInfos:      file_pb_crr_v1_proto_msgTypes,
	}.Build()
	File_pb_crr_v1_proto = out.File
	file_pb_crr_v1_proto_rawDesc = nil
	file_pb_crr_v1_proto_goTypes = nil
	file_pb_crr_v1_proto_depIdxs = nil
}
