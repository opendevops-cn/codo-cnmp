syntax = "proto3";

package resourcequota.v1;

import "google/api/annotations.proto";
import "khttp/middleware.proto";
import "khttp/audit.proto";
import "validate/validate.proto";
import "google/api/field_behavior.proto";



option go_package = "codo-cnmp/pb;pb";


service ResourceQuota {
  // 查看-云原生管理-ResourceQuota-列表
  rpc ListResourceQuota (ListResourceQuotaRequest) returns (ListResourceQuotaResponse) {
    option (google.api.http) = {
      get: "/api/v1/resourcequota/list"
    };
    option (github.ccheers.pggh.khttp.middleware) = {
      names: []
    };
  }
  // 管理-云原生管理-ResourceQuota-创建
  rpc CreateResourceQuota (CreateResourceQuotaRequest) returns (CreateResourceQuotaResponse) {
    option (google.api.http) = {
      post: "/api/v1/resourcequota/create"
      body: "*"
    };
    option (github.ccheers.pggh.khttp.middleware) = {
      names: []
    };
    option (github.ccheers.pggh.khttp.audit) = {
      module: "ResourceQuota";
      action: "创建";
      metas: [
        {
          key: "cluster",
          extract: "cluster_name"
        },
        {
          key: "namespace",
          extract: "namespace"
        },
        {
          key: "kind",
          const: "ResourceQuota"
        },
        {
          key: "name",
          extract: "name"
        }
      ]
    };
  }
  // 管理-云原生管理-ResourceQuota-编辑
  rpc UpdateResourceQuota (CreateResourceQuotaRequest) returns (CreateResourceQuotaResponse) {
    option (google.api.http) = {
      post: "/api/v1/resourcequota/update"
      body: "*"
    };
    option (github.ccheers.pggh.khttp.middleware) = {
      names: []
    };
    option (github.ccheers.pggh.khttp.audit) = {
      module: "ResourceQuota";
      action: "编辑";
      metas: [
        {
          key: "cluster",
          extract: "cluster_name"
        },
        {
          key: "namespace",
          extract: "namespace"
        },
        {
          key: "kind",
          const: "ResourceQuota"
        },
        {
          key: "name",
          extract: "name"
        }
      ]
    };
  }
  // 管理-云原生管理-ResourceQuota-创建或编辑
  rpc CreateOrUpdateResourceQuota (CreateResourceQuotaRequest) returns (CreateResourceQuotaResponse) {
    option (google.api.http) = {
      post: "/api/v1/resourcequota/create_or_update"
      body: "*"
    };
    option (github.ccheers.pggh.khttp.middleware) = {
      names: []
    };
    option (github.ccheers.pggh.khttp.audit) = {
      module: "ResourceQuota";
      action: "创建或编辑";
      metas: [
        {
          key: "cluster",
          extract: "cluster_name"
        },
        {
          key: "namespace",
          extract: "namespace"
        },
        {
          key: "kind",
          const: "ResourceQuota"
        },
        {
          key: "name",
          extract: "name"
        }
      ]
    };
  }
  // 查看-云原生管理-ResourceQuota-详情
  rpc GetResourceQuotaDetail (ResourceQuotaDetailRequest) returns (ResourceQuotaDetailResponse) {
    option (google.api.http) = {
      get: "/api/v1/resourcequota/detail"
    };
    option (github.ccheers.pggh.khttp.middleware) = {
      names: []
    };
  }
  // 管理-云原生管理-ResourceQuota-删除
  rpc DeleteResourceQuota (DeleteResourceQuotaRequest) returns (DeleteResourceQuotaResponse) {
    option (google.api.http) = {
      post: "/api/v1/resourcequota/delete"
      body: "*"
    };
    option (github.ccheers.pggh.khttp.middleware) = {
      names: []
    };
    option (github.ccheers.pggh.khttp.audit) = {
      module: "ResourceQuota";
      action: "删除";
      metas: [
        {
          key: "cluster",
          extract: "cluster_name"
        },
        {
          key: "namespace",
          extract: "namespace"
        },
        {
          key: "kind",
          const: "ResourceQuota"
        },
        {
          key: "name",
          extract: "name"
        }
      ]
    };
  }
}


// ResourceQuota列表请求
message ListResourceQuotaRequest {
  // 集群名称
  string cluster_name = 1 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 命名空间
  string namespace = 2;
  // 查询关键字
  string keyword = 4;
  // 页码
  uint32 page = 5;
  // 页大小
  uint32 page_size = 6;
  // 查询全部
  uint32  list_all = 7 [json_name = "list_all"];
}

// 资源配额
message HardResource {
  // CPU上限
  string cpu_limit = 1 [json_name = "cpu_limit"];
  // 内存上限
  string mem_limit = 2 [json_name = "men_limit"];
  // CPU请求
  string cpu_request = 3 [json_name = "default_cpu_request"];
  // 默认内存请求
  string mem_request = 4 [json_name = "default_mem_request"];
  // pod数量
  string max_pod = 5 [json_name = "max_pod"];
  // configmap数量
  string max_configmap = 6 [json_name = "max_configmap"];
  // secret数量
  string max_secret = 7 [json_name = "max_secret"];
  // 服务数量
  string max_service = 8 [json_name = "max_service"];
  // 存储请求总量
  string max_resource_storage = 9 [json_name = "max_resource_storage"];
  // 存储卷声明数量
  string max_persistent_volume_claim = 10 [json_name = "max_persistent_volume_claim"];
};

// CreateLimitRange请求
message CreateResourceQuotaRequest {
  // 集群名称
  string cluster_name = 1 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 命名空间
  string namespace = 2 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 名称
  string name = 3 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 资源配额
  HardResource hard_resource = 4;
}

// ResourceQuota Item
message ResourceQuotaItem {
  string name = 1 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 命名空间
  string namespace = 2 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 容器配额
  HardResource hard_resource = 3;
  // 配额用量
  HardResource used_resource = 4;
  // 创建时间
  uint64 create_time = 5 [(google.api.field_behavior) = REQUIRED];
  // Scopes
  repeated string scopes = 6 [(validate.rules).repeated.min_items = 0];
  // yaml
  string yaml = 7 [(google.api.field_behavior) = REQUIRED];
}

// CreateResourceQuota响应
message CreateResourceQuotaResponse {}


// ResourceQuota列表响应
message ListResourceQuotaResponse {
  // 总数
  uint32 total = 1 [(google.api.field_behavior) = REQUIRED];
  // 列表
  repeated ResourceQuotaItem list = 2 [(validate.rules).repeated.min_items = 0];
}


// 查看ResourceQuota详情请求
message ResourceQuotaDetailRequest {
  // 集群名称
  string cluster_name = 1 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 名称
  string name = 2 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 命名空间
  string namespace = 3 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
}


// 查看ResourceQuota详情响应
message ResourceQuotaDetailResponse {
  // 基础信息
  ResourceQuotaItem detail = 1 [(google.api.field_behavior) = REQUIRED];
}

// 删除ResourceQuota请求
message DeleteResourceQuotaRequest {
  // 集群名称
  string cluster_name = 1 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 名称
  string name = 2 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
  // 命名空间
  string namespace = 3 [(validate.rules).string.min_len = 1, (google.api.field_behavior) = REQUIRED];
}

// 删除ResourceQuota响应
message DeleteResourceQuotaResponse {}