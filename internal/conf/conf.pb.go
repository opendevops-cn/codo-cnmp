// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.2
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_CNMP_APP"
	APP *AppConfig `protobuf:"bytes,1,opt,name=APP,proto3" json:"APP,omitempty" env:"CODO_CNMP_APP"`
	// @gotags: env:"CODO_CNMP_DB"
	DB *DBConfig `protobuf:"bytes,2,opt,name=DB,proto3" json:"DB,omitempty" env:"CODO_CNMP_DB"`
	// @gotags: env:"CODO_CNMP_REDIS"
	REDIS *RedisConfig `protobuf:"bytes,3,opt,name=REDIS,proto3" json:"REDIS,omitempty" env:"CODO_CNMP_REDIS"`
	// @gotags: env:"DEFAULT_OTEL"
	OTEL *OTELConfig `protobuf:"bytes,4,opt,name=OTEL,proto3" json:"OTEL,omitempty" env:"DEFAULT_OTEL"`
	// @gotags: env:"DEFAULT_PROMETHEUS"
	PROMETHEUS *PrometheusConfig `protobuf:"bytes,5,opt,name=PROMETHEUS,proto3" json:"PROMETHEUS,omitempty" env:"DEFAULT_PROMETHEUS"`
	// @gotags: env:"DEFAULT_PPROF"
	PPROF *PprofConfig `protobuf:"bytes,6,opt,name=PPROF,proto3" json:"PPROF,omitempty" env:"DEFAULT_PPROF"`
	// @gotags: env:"CODO_CNMP_WS"
	WS *WebSocketConfig `protobuf:"bytes,7,opt,name=WS,proto3" json:"WS,omitempty" env:"CODO_CNMP_WS"`
	// @gotags: env:"CODO_API_GW"
	TIANMEN *TianMenConfig `protobuf:"bytes,8,opt,name=TIANMEN,proto3" json:"TIANMEN,omitempty" env:"CODO_API_GW"`
	// @gotags: env:"DEFAULT_GRAFANA"
	GRAFANA *GrafanaConfig `protobuf:"bytes,9,opt,name=GRAFANA,proto3" json:"GRAFANA,omitempty" env:"DEFAULT_GRAFANA"`
	// @gotags: env:"DEFAULT_KAFKA"
	KAFKA *KafkaConfig `protobuf:"bytes,10,opt,name=KAFKA,proto3" json:"KAFKA,omitempty" env:"DEFAULT_KAFKA"`
	// @gotags: env:"CODO_AGENT_SERVER"
	AGENT_SERVER *AgentServerConfig `protobuf:"bytes,11,opt,name=AGENT_SERVER,json=AGENTSERVER,proto3" json:"AGENT_SERVER,omitempty" env:"CODO_AGENT_SERVER"`
	// @gotags: env:"CODO_CNMP_MESH"
	MESH *MeshConfig `protobuf:"bytes,12,opt,name=MESH,proto3" json:"MESH,omitempty" env:"CODO_CNMP_MESH"`
	// @gotags: env:"CODO_CNMP_PROXY"
	PROXY *ProxyConfig `protobuf:"bytes,13,opt,name=PROXY,proto3" json:"PROXY,omitempty" env:"CODO_CNMP_PROXY"`
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetAPP() *AppConfig {
	if x != nil {
		return x.APP
	}
	return nil
}

func (x *Bootstrap) GetDB() *DBConfig {
	if x != nil {
		return x.DB
	}
	return nil
}

func (x *Bootstrap) GetREDIS() *RedisConfig {
	if x != nil {
		return x.REDIS
	}
	return nil
}

func (x *Bootstrap) GetOTEL() *OTELConfig {
	if x != nil {
		return x.OTEL
	}
	return nil
}

func (x *Bootstrap) GetPROMETHEUS() *PrometheusConfig {
	if x != nil {
		return x.PROMETHEUS
	}
	return nil
}

func (x *Bootstrap) GetPPROF() *PprofConfig {
	if x != nil {
		return x.PPROF
	}
	return nil
}

func (x *Bootstrap) GetWS() *WebSocketConfig {
	if x != nil {
		return x.WS
	}
	return nil
}

func (x *Bootstrap) GetTIANMEN() *TianMenConfig {
	if x != nil {
		return x.TIANMEN
	}
	return nil
}

func (x *Bootstrap) GetGRAFANA() *GrafanaConfig {
	if x != nil {
		return x.GRAFANA
	}
	return nil
}

func (x *Bootstrap) GetKAFKA() *KafkaConfig {
	if x != nil {
		return x.KAFKA
	}
	return nil
}

func (x *Bootstrap) GetAGENT_SERVER() *AgentServerConfig {
	if x != nil {
		return x.AGENT_SERVER
	}
	return nil
}

func (x *Bootstrap) GetMESH() *MeshConfig {
	if x != nil {
		return x.MESH
	}
	return nil
}

func (x *Bootstrap) GetPROXY() *ProxyConfig {
	if x != nil {
		return x.PROXY
	}
	return nil
}

type AppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	enum Environment {
	//	  NONE = 0;
	//	  DEV = 1;
	//	  PRE = 2;
	//	  PRD = 3;
	//	}
	//
	// @gotags: env:"CODO_CNMP_APP_NAME"
	NAME string `protobuf:"bytes,1,opt,name=NAME,proto3" json:"NAME,omitempty" env:"CODO_CNMP_APP_NAME"`
	// @gotags: env:"CODO_CNMP_APP_ENV"
	ENV string `protobuf:"bytes,2,opt,name=ENV,proto3" json:"ENV,omitempty" env:"CODO_CNMP_APP_ENV"`
	// @gotags: env:"CODO_CNMP_APP_TIMEOUT"
	TIMEOUT uint32 `protobuf:"varint,3,opt,name=TIMEOUT,proto3" json:"TIMEOUT,omitempty" env:"CODO_CNMP_APP_TIMEOUT"`
	// @gotags: env:"CODO_CNMP_APP_PROTOCOL"
	// string PROTOCOL = 4;
	// @gotags: env:"CODO_CNMP_APP_ADDR"
	ADDR string `protobuf:"bytes,5,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_CNMP_APP_ADDR"`
	// @gotags: env:"CODO_CNMP_APP_NETWORK"
	NETWORK string `protobuf:"bytes,6,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_CNMP_APP_NETWORK"`
	// @gotags: env:"CODO_CNMP_APP_VERSION"
	VERSION string `protobuf:"bytes,7,opt,name=VERSION,proto3" json:"VERSION,omitempty" env:"CODO_CNMP_APP_VERSION"`
	// @gotags: env:"CODO_CNMP_APP_SECRET"
	SECRET string `protobuf:"bytes,8,opt,name=SECRET,proto3" json:"SECRET,omitempty" env:"CODO_CNMP_APP_SECRET"`
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *AppConfig) GetNAME() string {
	if x != nil {
		return x.NAME
	}
	return ""
}

func (x *AppConfig) GetENV() string {
	if x != nil {
		return x.ENV
	}
	return ""
}

func (x *AppConfig) GetTIMEOUT() uint32 {
	if x != nil {
		return x.TIMEOUT
	}
	return 0
}

func (x *AppConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *AppConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *AppConfig) GetVERSION() string {
	if x != nil {
		return x.VERSION
	}
	return ""
}

func (x *AppConfig) GetSECRET() string {
	if x != nil {
		return x.SECRET
	}
	return ""
}

type PrometheusConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_PROMETHEUS_ENABLE"
	ENABLED bool `protobuf:"varint,1,opt,name=ENABLED,proto3" json:"ENABLED,omitempty" env:"DEFAULT_PROMETHEUS_ENABLE"`
	// @gotags: env:"DEFAULT_PROMETHEUS_NETWORK"
	NETWORK string `protobuf:"bytes,2,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"DEFAULT_PROMETHEUS_NETWORK"`
	// @gotags: env:"DEFAULT_PROMETHEUS_ADDR"
	ADDR string `protobuf:"bytes,3,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"DEFAULT_PROMETHEUS_ADDR"`
	// @gotags: env:"DEFAULT_PROMETHEUS_PATH"
	PATH string `protobuf:"bytes,4,opt,name=PATH,proto3" json:"PATH,omitempty" env:"DEFAULT_PROMETHEUS_PATH"`
}

func (x *PrometheusConfig) Reset() {
	*x = PrometheusConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusConfig) ProtoMessage() {}

func (x *PrometheusConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusConfig.ProtoReflect.Descriptor instead.
func (*PrometheusConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *PrometheusConfig) GetENABLED() bool {
	if x != nil {
		return x.ENABLED
	}
	return false
}

func (x *PrometheusConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *PrometheusConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *PrometheusConfig) GetPATH() string {
	if x != nil {
		return x.PATH
	}
	return ""
}

type PprofConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_PPROF_ENABLE"
	ENABLE bool `protobuf:"varint,1,opt,name=ENABLE,proto3" json:"ENABLE,omitempty" env:"DEFAULT_PPROF_ENABLE"`
	// @gotags: env:"DEFAULT_PPROF_NETWORK"
	NETWORK string `protobuf:"bytes,2,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"DEFAULT_PPROF_NETWORK"`
	// @gotags: env:"DEFAULT_PPROF_ADDR"
	ADDR string `protobuf:"bytes,3,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"DEFAULT_PPROF_ADDR"`
}

func (x *PprofConfig) Reset() {
	*x = PprofConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofConfig) ProtoMessage() {}

func (x *PprofConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofConfig.ProtoReflect.Descriptor instead.
func (*PprofConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *PprofConfig) GetENABLE() bool {
	if x != nil {
		return x.ENABLE
	}
	return false
}

func (x *PprofConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *PprofConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

type DBConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_CNMP_DB_TYPE"
	DB_TYPE string `protobuf:"bytes,1,opt,name=DB_TYPE,json=DBTYPE,proto3" json:"DB_TYPE,omitempty" env:"CODO_CNMP_DB_TYPE"`
	// @gotags: env:"DEFAULT_DB_DBUSER"
	DB_USER string `protobuf:"bytes,2,opt,name=DB_USER,json=DBUSER,proto3" json:"DB_USER,omitempty" env:"DEFAULT_DB_DBUSER"`
	// @gotags: env:"DEFAULT_DB_DBPWD"
	DB_PASSWORD string `protobuf:"bytes,3,opt,name=DB_PASSWORD,json=DBPASSWORD,proto3" json:"DB_PASSWORD,omitempty" env:"DEFAULT_DB_DBPWD"`
	// @gotags: env:"DEFAULT_DB_DBHOST"
	DB_HOST string `protobuf:"bytes,4,opt,name=DB_HOST,json=DBHOST,proto3" json:"DB_HOST,omitempty" env:"DEFAULT_DB_DBHOST"`
	// @gotags: env:"CODO_CNMP_DB_NAME"
	DB_NAME string `protobuf:"bytes,5,opt,name=DB_NAME,json=DBNAME,proto3" json:"DB_NAME,omitempty" env:"CODO_CNMP_DB_NAME"`
	// @gotags: env:"CODO_CNMP_DB_TABLE_PREFIX"
	DB_TABLE_PREFIX string `protobuf:"bytes,6,opt,name=DB_TABLE_PREFIX,json=DBTABLEPREFIX,proto3" json:"DB_TABLE_PREFIX,omitempty" env:"CODO_CNMP_DB_TABLE_PREFIX"`
	// @gotags: env:"CODO_CNMP_DB_FILE"
	DB_FILE string `protobuf:"bytes,7,opt,name=DB_FILE,json=DBFILE,proto3" json:"DB_FILE,omitempty" env:"CODO_CNMP_DB_FILE"`
	// @gotags: env:"DEFAULT_DB_DBPORT"
	DB_PORT string `protobuf:"bytes,8,opt,name=DB_PORT,json=DBPORT,proto3" json:"DB_PORT,omitempty" env:"DEFAULT_DB_DBPORT"`
	// @gotags: env:"CODO_CNMP_DB_MAX_IDLE_CONNS"
	DB_MaxIdleConns uint32 `protobuf:"varint,9,opt,name=DB_MaxIdleConns,json=DBMaxIdleConns,proto3" json:"DB_MaxIdleConns,omitempty" env:"CODO_CNMP_DB_MAX_IDLE_CONNS"`
	// @gotags: env:"CODO_CNMP_DB_MAX_OPEN_CONNS"
	DB_MaxOpenConns uint32 `protobuf:"varint,10,opt,name=DB_MaxOpenConns,json=DBMaxOpenConns,proto3" json:"DB_MaxOpenConns,omitempty" env:"CODO_CNMP_DB_MAX_OPEN_CONNS"`
	// @gotags: env:"CODO_CNMP_DB_CONN_MAX_LIFETIME"
	DB_ConnMaxLifetime uint32 `protobuf:"varint,11,opt,name=DB_ConnMaxLifetime,json=DBConnMaxLifetime,proto3" json:"DB_ConnMaxLifetime,omitempty" env:"CODO_CNMP_DB_CONN_MAX_LIFETIME"`
	// @gotags: env:"CODO_CNMP_DB_DEBUG"
	DEBUG bool `protobuf:"varint,12,opt,name=DEBUG,proto3" json:"DEBUG,omitempty" env:"CODO_CNMP_DB_DEBUG"`
}

func (x *DBConfig) Reset() {
	*x = DBConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBConfig) ProtoMessage() {}

func (x *DBConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBConfig.ProtoReflect.Descriptor instead.
func (*DBConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *DBConfig) GetDB_TYPE() string {
	if x != nil {
		return x.DB_TYPE
	}
	return ""
}

func (x *DBConfig) GetDB_USER() string {
	if x != nil {
		return x.DB_USER
	}
	return ""
}

func (x *DBConfig) GetDB_PASSWORD() string {
	if x != nil {
		return x.DB_PASSWORD
	}
	return ""
}

func (x *DBConfig) GetDB_HOST() string {
	if x != nil {
		return x.DB_HOST
	}
	return ""
}

func (x *DBConfig) GetDB_NAME() string {
	if x != nil {
		return x.DB_NAME
	}
	return ""
}

func (x *DBConfig) GetDB_TABLE_PREFIX() string {
	if x != nil {
		return x.DB_TABLE_PREFIX
	}
	return ""
}

func (x *DBConfig) GetDB_FILE() string {
	if x != nil {
		return x.DB_FILE
	}
	return ""
}

func (x *DBConfig) GetDB_PORT() string {
	if x != nil {
		return x.DB_PORT
	}
	return ""
}

func (x *DBConfig) GetDB_MaxIdleConns() uint32 {
	if x != nil {
		return x.DB_MaxIdleConns
	}
	return 0
}

func (x *DBConfig) GetDB_MaxOpenConns() uint32 {
	if x != nil {
		return x.DB_MaxOpenConns
	}
	return 0
}

func (x *DBConfig) GetDB_ConnMaxLifetime() uint32 {
	if x != nil {
		return x.DB_ConnMaxLifetime
	}
	return 0
}

func (x *DBConfig) GetDEBUG() bool {
	if x != nil {
		return x.DEBUG
	}
	return false
}

type OTELConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_OTEL_TRACE"
	TRACE *OTELConfig_Trace `protobuf:"bytes,1,opt,name=TRACE,proto3" json:"TRACE,omitempty" env:"DEFAULT_OTEL_TRACE"`
	// @gotags: env:"DEFAULT_OTEL_METRIC"
	METRIC *OTELConfig_Metric `protobuf:"bytes,2,opt,name=METRIC,proto3" json:"METRIC,omitempty" env:"DEFAULT_OTEL_METRIC"`
	// @gotags: env:"DEFAULT_OTEL_LOG"
	LOG *OTELConfig_Log `protobuf:"bytes,3,opt,name=LOG,proto3" json:"LOG,omitempty" env:"DEFAULT_OTEL_LOG"`
}

func (x *OTELConfig) Reset() {
	*x = OTELConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig) ProtoMessage() {}

func (x *OTELConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig.ProtoReflect.Descriptor instead.
func (*OTELConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *OTELConfig) GetTRACE() *OTELConfig_Trace {
	if x != nil {
		return x.TRACE
	}
	return nil
}

func (x *OTELConfig) GetMETRIC() *OTELConfig_Metric {
	if x != nil {
		return x.METRIC
	}
	return nil
}

func (x *OTELConfig) GetLOG() *OTELConfig_Log {
	if x != nil {
		return x.LOG
	}
	return nil
}

type RedisConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_REDIS_HOST"
	R_HOST string `protobuf:"bytes,1,opt,name=R_HOST,json=RHOST,proto3" json:"R_HOST,omitempty" env:"DEFAULT_REDIS_HOST"`
	// @gotags: env:"DEFAULT_REDIS_PORT"
	R_PORT uint32 `protobuf:"varint,2,opt,name=R_PORT,json=RPORT,proto3" json:"R_PORT,omitempty" env:"DEFAULT_REDIS_PORT"`
	// @gotags: env:"DEFAULT_REDIS_PASSWORD"
	R_PASSWORD string `protobuf:"bytes,3,opt,name=R_PASSWORD,json=RPASSWORD,proto3" json:"R_PASSWORD,omitempty" env:"DEFAULT_REDIS_PASSWORD"`
	// @gotags: env:"CODO_CNMP_REDIS_DB"
	R_DB uint32 `protobuf:"varint,4,opt,name=R_DB,json=RDB,proto3" json:"R_DB,omitempty" env:"CODO_CNMP_REDIS_DB"`
	// @gotags: env:"CODO_CNMP_REDIS_READ_TIMEOUT"
	READ_TIMEOUT uint32 `protobuf:"varint,5,opt,name=READ_TIMEOUT,json=READTIMEOUT,proto3" json:"READ_TIMEOUT,omitempty" env:"CODO_CNMP_REDIS_READ_TIMEOUT"`
	// @gotags: env:"CODO_CNMP_REDIS_WRITE_TIMEOUT"
	WRITE_TIMEOUT uint32 `protobuf:"varint,6,opt,name=WRITE_TIMEOUT,json=WRITETIMEOUT,proto3" json:"WRITE_TIMEOUT,omitempty" env:"CODO_CNMP_REDIS_WRITE_TIMEOUT"`
	// @gotags: env:"CODO_CNMP_REDIS_DIAL_TIMEOUT"
	DIAL_TIMEOUT uint32 `protobuf:"varint,7,opt,name=DIAL_TIMEOUT,json=DIALTIMEOUT,proto3" json:"DIAL_TIMEOUT,omitempty" env:"CODO_CNMP_REDIS_DIAL_TIMEOUT"`
	// @gotags: env:"CODO_CNMP_REDIS_NETWORK"
	NETWORK string `protobuf:"bytes,8,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_CNMP_REDIS_NETWORK"`
}

func (x *RedisConfig) Reset() {
	*x = RedisConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfig) ProtoMessage() {}

func (x *RedisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfig.ProtoReflect.Descriptor instead.
func (*RedisConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *RedisConfig) GetR_HOST() string {
	if x != nil {
		return x.R_HOST
	}
	return ""
}

func (x *RedisConfig) GetR_PORT() uint32 {
	if x != nil {
		return x.R_PORT
	}
	return 0
}

func (x *RedisConfig) GetR_PASSWORD() string {
	if x != nil {
		return x.R_PASSWORD
	}
	return ""
}

func (x *RedisConfig) GetR_DB() uint32 {
	if x != nil {
		return x.R_DB
	}
	return 0
}

func (x *RedisConfig) GetREAD_TIMEOUT() uint32 {
	if x != nil {
		return x.READ_TIMEOUT
	}
	return 0
}

func (x *RedisConfig) GetWRITE_TIMEOUT() uint32 {
	if x != nil {
		return x.WRITE_TIMEOUT
	}
	return 0
}

func (x *RedisConfig) GetDIAL_TIMEOUT() uint32 {
	if x != nil {
		return x.DIAL_TIMEOUT
	}
	return 0
}

func (x *RedisConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

type WebSocketConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_CNMP_WS_ADDR"
	ADDR string `protobuf:"bytes,1,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_CNMP_WS_ADDR"`
}

func (x *WebSocketConfig) Reset() {
	*x = WebSocketConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSocketConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketConfig) ProtoMessage() {}

func (x *WebSocketConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketConfig.ProtoReflect.Descriptor instead.
func (*WebSocketConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *WebSocketConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

type TianMenConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_API_GW"
	ADDR string `protobuf:"bytes,1,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_API_GW"`
	// @gotags: env:"CODO_AUTH_KEY"
	AUTH_KEY string `protobuf:"bytes,2,opt,name=AUTH_KEY,json=AUTHKEY,proto3" json:"AUTH_KEY,omitempty" env:"CODO_AUTH_KEY"`
	// @gotags: env:"CODO_API_GW_TIMEOUT"
	Timeout uint32 `protobuf:"varint,3,opt,name=Timeout,proto3" json:"Timeout,omitempty" env:"CODO_API_GW_TIMEOUT"`
}

func (x *TianMenConfig) Reset() {
	*x = TianMenConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TianMenConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TianMenConfig) ProtoMessage() {}

func (x *TianMenConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TianMenConfig.ProtoReflect.Descriptor instead.
func (*TianMenConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *TianMenConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *TianMenConfig) GetAUTH_KEY() string {
	if x != nil {
		return x.AUTH_KEY
	}
	return ""
}

func (x *TianMenConfig) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type GrafanaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_GRAFANA_ADDR"
	ADDR string `protobuf:"bytes,1,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"DEFAULT_GRAFANA_ADDR"`
	// @gotags: env:"DEFAULT_GRAFANA_USER"
	USER string `protobuf:"bytes,2,opt,name=USER,proto3" json:"USER,omitempty" env:"DEFAULT_GRAFANA_USER"`
	// @gotags: env:"DEFAULT_GRAFANA_PASSWORD"
	PASSWORD string `protobuf:"bytes,3,opt,name=PASSWORD,proto3" json:"PASSWORD,omitempty" env:"DEFAULT_GRAFANA_PASSWORD"`
}

func (x *GrafanaConfig) Reset() {
	*x = GrafanaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrafanaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaConfig) ProtoMessage() {}

func (x *GrafanaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaConfig.ProtoReflect.Descriptor instead.
func (*GrafanaConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *GrafanaConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *GrafanaConfig) GetUSER() string {
	if x != nil {
		return x.USER
	}
	return ""
}

func (x *GrafanaConfig) GetPASSWORD() string {
	if x != nil {
		return x.PASSWORD
	}
	return ""
}

type KafkaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_KAFKA_ADDR"
	ADDR string `protobuf:"bytes,1,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"DEFAULT_KAFKA_ADDR"`
	// @gotags: env:"DEFAULT_KAFKA_TOPIC"
	TOPIC string `protobuf:"bytes,2,opt,name=TOPIC,proto3" json:"TOPIC,omitempty" env:"DEFAULT_KAFKA_TOPIC"`
	// @gotags: env:"DEFAULT_KAFKA_DIAL_TIMEOUT"
	DialTimeout uint32 `protobuf:"varint,3,opt,name=DialTimeout,proto3" json:"DialTimeout,omitempty" env:"DEFAULT_KAFKA_DIAL_TIMEOUT"`
}

func (x *KafkaConfig) Reset() {
	*x = KafkaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaConfig) ProtoMessage() {}

func (x *KafkaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaConfig.ProtoReflect.Descriptor instead.
func (*KafkaConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *KafkaConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *KafkaConfig) GetTOPIC() string {
	if x != nil {
		return x.TOPIC
	}
	return ""
}

func (x *KafkaConfig) GetDialTimeout() uint32 {
	if x != nil {
		return x.DialTimeout
	}
	return 0
}

type AgentServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_AGENT_SERVER_ADDR"
	SERVER_ADDR string `protobuf:"bytes,1,opt,name=SERVER_ADDR,json=SERVERADDR,proto3" json:"SERVER_ADDR,omitempty" env:"CODO_AGENT_SERVER_ADDR"`
	// @gotags: env:"CODO_AGENT_SERVER_NODE_TYPE"
	NODE_TYPE string `protobuf:"bytes,2,opt,name=NODE_TYPE,json=NODETYPE,proto3" json:"NODE_TYPE,omitempty" env:"CODO_AGENT_SERVER_NODE_TYPE"`
	// @gotags: env:"CODO_AGENT_SERVER_MESH_ADDR"
	MESH_ADDR string `protobuf:"bytes,3,opt,name=MESH_ADDR,json=MESHADDR,proto3" json:"MESH_ADDR,omitempty" env:"CODO_AGENT_SERVER_MESH_ADDR"`
	// @gotags: env:"CODO_AGENT_SERVER_ENABLED"
	ENABLED bool `protobuf:"varint,4,opt,name=ENABLED,proto3" json:"ENABLED,omitempty" env:"CODO_AGENT_SERVER_ENABLED"`
}

func (x *AgentServerConfig) Reset() {
	*x = AgentServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentServerConfig) ProtoMessage() {}

func (x *AgentServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentServerConfig.ProtoReflect.Descriptor instead.
func (*AgentServerConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{11}
}

func (x *AgentServerConfig) GetSERVER_ADDR() string {
	if x != nil {
		return x.SERVER_ADDR
	}
	return ""
}

func (x *AgentServerConfig) GetNODE_TYPE() string {
	if x != nil {
		return x.NODE_TYPE
	}
	return ""
}

func (x *AgentServerConfig) GetMESH_ADDR() string {
	if x != nil {
		return x.MESH_ADDR
	}
	return ""
}

func (x *AgentServerConfig) GetENABLED() bool {
	if x != nil {
		return x.ENABLED
	}
	return false
}

type MeshConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_CNMP_MESH_WHITE_IP_LIST"
	WHITE_IP_LIST []string `protobuf:"bytes,1,rep,name=WHITE_IP_LIST,json=WHITEIPLIST,proto3" json:"WHITE_IP_LIST,omitempty" env:"CODO_CNMP_MESH_WHITE_IP_LIST"`
	// @gotags: env:"CODO_CNMP_MESH_SRC_AGENT_ID"
	SRC_AGENT_ID string `protobuf:"bytes,2,opt,name=SRC_AGENT_ID,json=SRCAGENTID,proto3" json:"SRC_AGENT_ID,omitempty" env:"CODO_CNMP_MESH_SRC_AGENT_ID"`
	// @gotags: env:"CODO_CNMP_MESH_SRC_AGENT_PORT"
	SRC_AGENT_PORT uint32 `protobuf:"varint,3,opt,name=SRC_AGENT_PORT,json=SRCAGENTPORT,proto3" json:"SRC_AGENT_PORT,omitempty" env:"CODO_CNMP_MESH_SRC_AGENT_PORT"`
}

func (x *MeshConfig) Reset() {
	*x = MeshConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshConfig) ProtoMessage() {}

func (x *MeshConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshConfig.ProtoReflect.Descriptor instead.
func (*MeshConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{12}
}

func (x *MeshConfig) GetWHITE_IP_LIST() []string {
	if x != nil {
		return x.WHITE_IP_LIST
	}
	return nil
}

func (x *MeshConfig) GetSRC_AGENT_ID() string {
	if x != nil {
		return x.SRC_AGENT_ID
	}
	return ""
}

func (x *MeshConfig) GetSRC_AGENT_PORT() uint32 {
	if x != nil {
		return x.SRC_AGENT_PORT
	}
	return 0
}

type ProxyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_CNMP_PROXY_ADDR"
	ADDR string `protobuf:"bytes,1,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_CNMP_PROXY_ADDR"`
	// @gotags: env:"CODO_CNMP_PROXY_ENABLE"
	ENABLE bool `protobuf:"varint,2,opt,name=ENABLE,proto3" json:"ENABLE,omitempty" env:"CODO_CNMP_PROXY_ENABLE"`
	// @gotags: env:"CODO_CNMP_PROXY_NETWORK"
	NETWORK string `protobuf:"bytes,3,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_CNMP_PROXY_NETWORK"`
	// @gotags: env:"CODO_CNMP_PROXY_API_SERVER"
	API_SERVER string `protobuf:"bytes,4,opt,name=API_SERVER,json=APISERVER,proto3" json:"API_SERVER,omitempty" env:"CODO_CNMP_PROXY_API_SERVER"`
}

func (x *ProxyConfig) Reset() {
	*x = ProxyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfig) ProtoMessage() {}

func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{13}
}

func (x *ProxyConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *ProxyConfig) GetENABLE() bool {
	if x != nil {
		return x.ENABLE
	}
	return false
}

func (x *ProxyConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *ProxyConfig) GetAPI_SERVER() string {
	if x != nil {
		return x.API_SERVER
	}
	return ""
}

type OTELConfig_Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_OTEL_TRACE_ENDPOINT"
	ENDPOINT string `protobuf:"bytes,1,opt,name=ENDPOINT,proto3" json:"ENDPOINT,omitempty" env:"DEFAULT_OTEL_TRACE_ENDPOINT"`
	// @gotags: env:"DEFAULT_OTEL_TRACE_INSECURE"
	INSECURE bool `protobuf:"varint,2,opt,name=INSECURE,proto3" json:"INSECURE,omitempty" env:"DEFAULT_OTEL_TRACE_INSECURE"`
}

func (x *OTELConfig_Trace) Reset() {
	*x = OTELConfig_Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig_Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig_Trace) ProtoMessage() {}

func (x *OTELConfig_Trace) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig_Trace.ProtoReflect.Descriptor instead.
func (*OTELConfig_Trace) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 0}
}

func (x *OTELConfig_Trace) GetENDPOINT() string {
	if x != nil {
		return x.ENDPOINT
	}
	return ""
}

func (x *OTELConfig_Trace) GetINSECURE() bool {
	if x != nil {
		return x.INSECURE
	}
	return false
}

type OTELConfig_Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_OTEL_METRIC_ENABLE_EXEMPLAR"
	ENABLE_EXEMPLAR bool `protobuf:"varint,1,opt,name=ENABLE_EXEMPLAR,json=ENABLEEXEMPLAR,proto3" json:"ENABLE_EXEMPLAR,omitempty" env:"DEFAULT_OTEL_METRIC_ENABLE_EXEMPLAR"`
}

func (x *OTELConfig_Metric) Reset() {
	*x = OTELConfig_Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig_Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig_Metric) ProtoMessage() {}

func (x *OTELConfig_Metric) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig_Metric.ProtoReflect.Descriptor instead.
func (*OTELConfig_Metric) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 1}
}

func (x *OTELConfig_Metric) GetENABLE_EXEMPLAR() bool {
	if x != nil {
		return x.ENABLE_EXEMPLAR
	}
	return false
}

type OTELConfig_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"DEFAULT_OTEL_LOG_LEVEL"
	LEVEL string `protobuf:"bytes,1,opt,name=LEVEL,proto3" json:"LEVEL,omitempty" env:"DEFAULT_OTEL_LOG_LEVEL"`
}

func (x *OTELConfig_Log) Reset() {
	*x = OTELConfig_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig_Log) ProtoMessage() {}

func (x *OTELConfig_Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig_Log.ProtoReflect.Descriptor instead.
func (*OTELConfig_Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 2}
}

func (x *OTELConfig_Log) GetLEVEL() string {
	if x != nil {
		return x.LEVEL
	}
	return ""
}

var File_conf_conf_proto protoreflect.FileDescriptor

var file_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x22, 0x85, 0x05,
	0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x27, 0x0a, 0x03, 0x41,
	0x50, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x03, 0x41, 0x50, 0x50, 0x12, 0x24, 0x0a, 0x02, 0x44, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x42,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x02, 0x44, 0x42, 0x12, 0x2d, 0x0a, 0x05, 0x52, 0x45,
	0x44, 0x49, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x05, 0x52, 0x45, 0x44, 0x49, 0x53, 0x12, 0x2a, 0x0a, 0x04, 0x4f, 0x54, 0x45,
	0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x04, 0x4f, 0x54, 0x45, 0x4c, 0x12, 0x3c, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54, 0x48,
	0x45, 0x55, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54, 0x48,
	0x45, 0x55, 0x53, 0x12, 0x2d, 0x0a, 0x05, 0x50, 0x50, 0x52, 0x4f, 0x46, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x50, 0x50, 0x52,
	0x4f, 0x46, 0x12, 0x2b, 0x0a, 0x02, 0x57, 0x53, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x65, 0x62, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x02, 0x57, 0x53, 0x12,
	0x33, 0x0a, 0x07, 0x54, 0x49, 0x41, 0x4e, 0x4d, 0x45, 0x4e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x69,
	0x61, 0x6e, 0x4d, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x54, 0x49, 0x41,
	0x4e, 0x4d, 0x45, 0x4e, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x52, 0x41, 0x46, 0x41, 0x4e, 0x41, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x07, 0x47, 0x52, 0x41, 0x46, 0x41, 0x4e, 0x41, 0x12, 0x2d, 0x0a, 0x05, 0x4b, 0x41, 0x46,
	0x4b, 0x41, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x05, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x12, 0x40, 0x0a, 0x0c, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x12, 0x2a, 0x0a, 0x04, 0x4d, 0x45,
	0x53, 0x48, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x04, 0x4d, 0x45, 0x53, 0x48, 0x12, 0x2d, 0x0a, 0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05,
	0x50, 0x52, 0x4f, 0x58, 0x59, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x4e, 0x56, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54, 0x49, 0x4d, 0x45,
	0x4f, 0x55, 0x54, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x45, 0x43,
	0x52, 0x45, 0x54, 0x22, 0x6e, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x44, 0x44, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x41, 0x54, 0x48, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x41, 0x54, 0x48, 0x22, 0x53, 0x0a, 0x0b, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x45,
	0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x22, 0x80, 0x03, 0x0a, 0x08, 0x44, 0x42, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x54, 0x59, 0x50, 0x45, 0x12, 0x17,
	0x0a, 0x07, 0x44, 0x42, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x42, 0x55, 0x53, 0x45, 0x52, 0x12, 0x1f, 0x0a, 0x0b, 0x44, 0x42, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x42,
	0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x48,
	0x4f, 0x53, 0x54, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x48, 0x4f, 0x53,
	0x54, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x26, 0x0a, 0x0f, 0x44, 0x42,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x42, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x50, 0x52, 0x45, 0x46,
	0x49, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x46, 0x49, 0x4c, 0x45, 0x12, 0x17, 0x0a, 0x07, 0x44,
	0x42, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42,
	0x50, 0x4f, 0x52, 0x54, 0x12, 0x27, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x4d, 0x61, 0x78, 0x49, 0x64,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x44,
	0x42, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x44, 0x42, 0x5f, 0x4d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x44, 0x42, 0x4d, 0x61, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x44, 0x42, 0x5f, 0x43, 0x6f, 0x6e,
	0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x22, 0xb6, 0x02, 0x0a, 0x0a,
	0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x05, 0x54, 0x52,
	0x41, 0x43, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x12, 0x35,
	0x0a, 0x06, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x45, 0x4c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x4d,
	0x45, 0x54, 0x52, 0x49, 0x43, 0x12, 0x2c, 0x0a, 0x03, 0x4c, 0x4f, 0x47, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03,
	0x4c, 0x4f, 0x47, 0x1a, 0x3f, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x4e, 0x53, 0x45,
	0x43, 0x55, 0x52, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x4e, 0x53, 0x45,
	0x43, 0x55, 0x52, 0x45, 0x1a, 0x31, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x27,
	0x0a, 0x0f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x4d, 0x50, 0x4c, 0x41,
	0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x45,
	0x58, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x52, 0x1a, 0x1b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x22, 0xf2, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x52, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x48, 0x4f, 0x53, 0x54, 0x12, 0x15, 0x0a, 0x06, 0x52,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x50, 0x4f,
	0x52, 0x54, 0x12, 0x1d, 0x0a, 0x0a, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52,
	0x44, 0x12, 0x11, 0x0a, 0x04, 0x52, 0x5f, 0x44, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x52, 0x44, 0x42, 0x12, 0x21, 0x0a, 0x0c, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x52, 0x45, 0x41, 0x44,
	0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x12, 0x23, 0x0a, 0x0d, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x57, 0x52, 0x49, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x12, 0x21, 0x0a, 0x0c,
	0x44, 0x49, 0x41, 0x4c, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x44, 0x49, 0x41, 0x4c, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x12,
	0x18, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x22, 0x25, 0x0a, 0x0f, 0x57, 0x65, 0x62,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x44, 0x44, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52,
	0x22, 0x58, 0x0a, 0x0d, 0x54, 0x69, 0x61, 0x6e, 0x4d, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x44, 0x44, 0x52, 0x12, 0x19, 0x0a, 0x08, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4b, 0x45,
	0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x55, 0x54, 0x48, 0x4b, 0x45, 0x59,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x53, 0x0a, 0x0d, 0x47, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x44, 0x44, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x22,
	0x59, 0x0a, 0x0b, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44,
	0x44, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x44,
	0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x41, 0x44, 0x44,
	0x52, 0x12, 0x1b, 0x0a, 0x09, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x4f, 0x44, 0x45, 0x54, 0x59, 0x50, 0x45, 0x12, 0x1b,
	0x0a, 0x09, 0x4d, 0x45, 0x53, 0x48, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4d, 0x45, 0x53, 0x48, 0x41, 0x44, 0x44, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x22, 0x78, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x49, 0x50, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x57, 0x48, 0x49, 0x54,
	0x45, 0x49, 0x50, 0x4c, 0x49, 0x53, 0x54, 0x12, 0x20, 0x0a, 0x0c, 0x53, 0x52, 0x43, 0x5f, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x52, 0x43, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0e, 0x53, 0x52, 0x43,
	0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x53, 0x52, 0x43, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x50, 0x4f, 0x52, 0x54, 0x22,
	0x72, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44,
	0x44, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x45,
	0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x12, 0x1d, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x50, 0x49, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x2e, 0x31, 0x32, 0x33, 0x75, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x6f, 0x2f, 0x63,
	0x6f, 0x64, 0x6f, 0x2d, 0x63, 0x6e, 0x6d, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData = file_conf_conf_proto_rawDesc
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_conf_proto_rawDescData)
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_conf_conf_proto_goTypes = []interface{}{
	(*Bootstrap)(nil),         // 0: kratos.api.Bootstrap
	(*AppConfig)(nil),         // 1: kratos.api.AppConfig
	(*PrometheusConfig)(nil),  // 2: kratos.api.PrometheusConfig
	(*PprofConfig)(nil),       // 3: kratos.api.PprofConfig
	(*DBConfig)(nil),          // 4: kratos.api.DBConfig
	(*OTELConfig)(nil),        // 5: kratos.api.OTELConfig
	(*RedisConfig)(nil),       // 6: kratos.api.RedisConfig
	(*WebSocketConfig)(nil),   // 7: kratos.api.WebSocketConfig
	(*TianMenConfig)(nil),     // 8: kratos.api.TianMenConfig
	(*GrafanaConfig)(nil),     // 9: kratos.api.GrafanaConfig
	(*KafkaConfig)(nil),       // 10: kratos.api.KafkaConfig
	(*AgentServerConfig)(nil), // 11: kratos.api.AgentServerConfig
	(*MeshConfig)(nil),        // 12: kratos.api.MeshConfig
	(*ProxyConfig)(nil),       // 13: kratos.api.ProxyConfig
	(*OTELConfig_Trace)(nil),  // 14: kratos.api.OTELConfig.Trace
	(*OTELConfig_Metric)(nil), // 15: kratos.api.OTELConfig.Metric
	(*OTELConfig_Log)(nil),    // 16: kratos.api.OTELConfig.Log
}
var file_conf_conf_proto_depIdxs = []int32{
	1,  // 0: kratos.api.Bootstrap.APP:type_name -> kratos.api.AppConfig
	4,  // 1: kratos.api.Bootstrap.DB:type_name -> kratos.api.DBConfig
	6,  // 2: kratos.api.Bootstrap.REDIS:type_name -> kratos.api.RedisConfig
	5,  // 3: kratos.api.Bootstrap.OTEL:type_name -> kratos.api.OTELConfig
	2,  // 4: kratos.api.Bootstrap.PROMETHEUS:type_name -> kratos.api.PrometheusConfig
	3,  // 5: kratos.api.Bootstrap.PPROF:type_name -> kratos.api.PprofConfig
	7,  // 6: kratos.api.Bootstrap.WS:type_name -> kratos.api.WebSocketConfig
	8,  // 7: kratos.api.Bootstrap.TIANMEN:type_name -> kratos.api.TianMenConfig
	9,  // 8: kratos.api.Bootstrap.GRAFANA:type_name -> kratos.api.GrafanaConfig
	10, // 9: kratos.api.Bootstrap.KAFKA:type_name -> kratos.api.KafkaConfig
	11, // 10: kratos.api.Bootstrap.AGENT_SERVER:type_name -> kratos.api.AgentServerConfig
	12, // 11: kratos.api.Bootstrap.MESH:type_name -> kratos.api.MeshConfig
	13, // 12: kratos.api.Bootstrap.PROXY:type_name -> kratos.api.ProxyConfig
	14, // 13: kratos.api.OTELConfig.TRACE:type_name -> kratos.api.OTELConfig.Trace
	15, // 14: kratos.api.OTELConfig.METRIC:type_name -> kratos.api.OTELConfig.Metric
	16, // 15: kratos.api.OTELConfig.LOG:type_name -> kratos.api.OTELConfig.Log
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebSocketConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TianMenConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrafanaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig_Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig_Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_rawDesc = nil
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
